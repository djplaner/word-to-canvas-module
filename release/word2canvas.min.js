class c2m_View{constructor(model,controller){this.model=model,this.controller=controller,this.version="2.0.1"}addW2cVersion(){let w2cVersion=document.querySelector("span.w2c-version");w2cVersion&&(w2cVersion.innerHTML=`(v${this.version})`)}createEmptyDialogDiv(){let c2mDiv=document.querySelector("div.c2m_dialog");return c2mDiv&&c2mDiv.parentNode.removeChild(c2mDiv),c2mDiv=document.createElement("div"),c2mDiv.classList.add("c2m_dialog"),c2mDiv}configureAccordions(){let acc=document.getElementsByClassName("w2c-accordion");for(let i=0;i<acc.length;i++)acc[i].addEventListener("click",(function(){this.classList.toggle("w2c-active-accordion");let panel=this.nextElementSibling;"block"===panel.style.display?panel.style.display="none":panel.style.display="block"}))}}class c2m_InitialisedView extends c2m_View{constructor(model,controller){super(model,controller)}render(){console.log("0. Initialise");let addModuleButton=document.querySelector("button.add_module_link");if(addModuleButton){let button=document.querySelector("button.c2m_word_2_module");button||(button=document.createElement("button"),button.style="margin-right: 0.2em",button.classList.add("c2m_word_2_module"),button.classList.add("btn"),button.classList.add("btn-primary"),button.onclick=()=>this.controller.handleClick(c2m_ChooseWord),button.innerHTML='\n\t\t\t.docx 2 <i class="icon-plus"></i> \n\t\t\t<span class="screenreader-only">Add</span>\n\t\t\tModule\n\t\t\t',addModuleButton.parentElement.insertBefore(button,addModuleButton));let dialog=document.querySelector("div.c2m_dialog");dialog&&dialog.parentElement.removeChild(dialog)}}}const CHOOSE_WORD_HTML='\n\n<div class="item-group-container" id="w2c-container">\n  <div class="item-group-condensed context_module">\n\n    <div class="ig-header header">\n       <span class="name">.docx 2 + Canvas Module</span><span class="w2c-version"></span>\n       <div class="ig-header-admin">\n         <button aria-label="Close .docx 2 Canvas Module" id="w2c-btn-close">X</button>\n       </div>\n    </div> \x3c!-- end ig-header --\x3e\n\n    <div class="content border border-trbl">\n\n<div class="w2c-nav">\n  <ul>\n    <li class="w2c-nav w2c-active"><a href="#">1. Choose .docx</a></li>\n\t<li class="w2c-nav"><a href="#">2. Check HTML</a> </li>\n\t<li class="w2c-nav"><a href="#">3. Check Module</a> </li>\n\t<li class="w2c-nav"><a href="#">4. Complete?</a></li>\n  </ul>\n</div>\n\n\n<div class="w2c-content pad-box-mini">\n<div class="w2c-upload">\n  <h4>Choose a .docx file</h4>\n  <div class="pad-box-micro border border-trbl muted">\n    <i class="icon-info"></i> \n    <small>\n      More on <a target="_blank" href="https://github.com/djplaner/word-to-canvas-module/blob/main/docs/create.md#create-a-word-2-canvas-word-document">word-2-canvas Word styles</a>\n    </small>\n  </div>\n  <p>Select the Word document to create a Canvas module</p>\n    <input id="w2c-docx" type="file" accept=".docx" />\n\n\n</div>\n\n</div>\n\n    </div> \x3c!-- end content --\x3e\n\n  </div> \x3c!-- end item-group-condensed --\x3e\n</div> \x3c!-- end of w2c-container --\x3e\n\n<style>\n\n.w2c-version {\n  font-size: 60%;\n  color: #999;\n  vertical-align:text-bottom;\n  margin-left: 1em;\n}\n\n.w2c-content {\n    clear:both;\n}\n\n.w2c-nav { \n    font-size: small;\n}\n\n.w2c-nav ul  {\n\tlist-style-type: none;\n    margin: 0;\n    padding: 0;\n    overflow: hidden ;\n    background-color: #eee; \n    width:100%;\n}\n\nli.w2c-active {\n    background-color: #aaa;\n    font-weight: bold;\n}\n\nli.w2c-close {\n    float: right !important;\n    border-right: none !important;\n}\n\n.w2c-nav ul li {\n    float:left;\n    border-right: 1px solid #000;\n}\n\nli.w2c-active a {\n    color: black !important;\n}\n\nli.w2c-nav a {\n    display: block;\n    padding: 0.5em;\n    text-align: center;\n    text-decoration: none;\n    color: #ccc; \n}\n\n.w2c-nav li a:hover {\n    background-color: #111;\n}\n\n.w2c-nav li:nth-child(4) {\n    border-right: none;\n}\n\n\n</style>\n\n';class c2m_ChooseWordView extends c2m_View{constructor(model,controller){super(model,controller)}render(){console.log("1. Choose the Word document");let c2mDiv=this.createEmptyDialogDiv();c2mDiv.insertAdjacentHTML("afterbegin",CHOOSE_WORD_HTML);let itemGroupContainer=document.querySelector("div.item-group-container");itemGroupContainer.parentNode.insertBefore(c2mDiv,itemGroupContainer),document.querySelector("input#w2c-docx").addEventListener("change",(e=>this.controller.handleUpload(e)));let closeButton=document.getElementById("w2c-btn-close");document.getElementById("w2c-btn-confirm");closeButton.onclick=()=>this.controller.handleClick(c2m_Initialised),this.addW2cVersion()}}const CHECK_HTML_HTML='\n<div class="item-group-container" id="w2c-container">\n  <div class="item-group-condensed context_module">\n\n    <div class="ig-header header">\n       <span class="name">.docx 2 + Canvas Module</span> <span class="w2c-version"></span>\n       <div class="ig-header-admin">\n         <button aria-label="Close .docx 2 Canvas Module" id="w2c-btn-close">X</button>\n       </div>\n    </div> \x3c!-- end ig-header --\x3e\n\n    <div class="content border border-trbl">\n\n<div class="w2c-nav">\n  <ul>\n    <li class="w2c-nav"><a href="#">1. Choose .docx</a></li>\n\t<li class="w2c-nav w2c-active"><a href="#">2. Check HTML</a> </li>\n\t<li class="w2c-nav"><a href="#">3. Check Module</a> </li>\n\t<li class="w2c-nav"><a href="#">4. Complete?</a></li>\n  </ul>\n</div>\n\n\n<div class="w2c-content pad-box-mini">\n\n<div id="w2c-choice">\n  <button id="w2c-btn-start-again" class="btn">\n    <i class="icon-arrow-left"></i>\n    Choose another .docx\n  </button>\n  <button id="w2c-btn-confirm" class="btn" style="display:none">\n    Check module structure\n    <i class="icon-arrow-right"></i>\n  </button>\n</div>\n\n\n<div class="w2c-waiting-results">\n<p><em>Waiting for conversion...</em></p>\n<div class="w2c-loading"></div>\n</div>\n\n<div class="w2c-received-results" style="display:none">\n  <h4>.docx to HTML conversion completed</h4>\n<div class="pad-box-micro border border-trbl muted">\n    <i class="icon-info"></i> \n    <small>\n      Checking and fixing \n\t  <a target="_blank" href="https://github.com/djplaner/word-to-canvas-module/blob/main/docs/word2html-messages.md#word-2-html-messages">\n\t  HTML conversion outcomes</a>\n    </small>\n</div>\n  <div id="c2m_summary">\n  <p>Use the following to check the conversion.</p>\n  <p>If any issues, modify the Word doc and "chose another .docx". If ok, check the \n  module structure. </p>\n  <p>Open <em>Messages</em> accordion to show conversion messages</p>\n  <p>Open <em>HTML</em> to the HTML conversion of the Word document content.</p>\n  </div>\n<div class="pad-box-micro border border-trbl muted" id="w2c-customise">\n<small><strong>Customise:</strong></small>\n<ul style="list-style: none">\n  <li><small> <input type="checkbox" id="w2c-accordion"> <label for="w2c-accordion">H2 as accordions</label>\n\t<a href="https://djplaner.github.io/word-to-canvas-module/docs/options/h2-as-accordions.html" target="_blank">\n    <i class="icon-info"></i> for more</a></small>\n  </li>\n  <li><small> <input type="checkbox" id="w2c-leave-errors"> <label for="w2c-leave-errors">Keep error labels in Canvas content</label>\n\t<a href="https://djplaner.github.io/djplaner/word-to-canvas-module/docs/options/keep-error-labels.md" target="_blank">\n    <i class="icon-info"></i> for more</a></small>\n\t</li>\n  </ul>\n</div>\n\n\n<button class="w2c-accordion" id="c2m_result">Messages</button>\n<div class="w2c_panel">\n  <div id="c2m_messages"></div>\n</div>\n\n<button class="w2c-accordion" id="c2m_html_button">HTML</button>\n<div class="w2c_panel" id="c2m_html"></div>\n</div>\n\n<div class="w2c-error" style="display:none">\n  <h4>Problem with conversion</h4>\n  <p>Unable to convert the Word document. Erorr message:\n  <blockquote><span class="text-error" id="c2m_error_message"></span></blockquote>\n  </p>\n\n  <h5>What next?</h5>\n  <p class="text-warning">\n  <i class="icon-Solid icon-warning" aria-hidden="true"></i>\n  <ol>\n    <li> Corrupt Word doc?\n\t<p> Some <em>.docx</em> files format may be "off". A solution for some has been to save the \n\t   document again using the Word app (i.e. not in the browser) ensuring it\'s saved as a Word 2007-365 .docx file.</p>\n\t   </li>\n\t<li> word2canvas is broken? - probable cause\n\t<p>Report the error to your friendly word2canvas technician.</p>\n\t</li>\n\t</ol>\n</div>\n\n    </div> \x3c!-- end content --\x3e\n\n  </div> \x3c!-- end item-group-condensed --\x3e\n</div> \x3c!-- end of w2c-container --\x3e\n\n\n<style>\n.w2c-version {\n  font-size: 60%;\n  color: #999;\n  vertical-align:text-bottom;\n  margin-left: 1em;\n}\n\n#c2m_messages ul {\n}\n\n#c2m_messages li {\n\tlist-style-type: disc;\n\tfont-size: 90%;\n\tmargin-top: 0.25rem;\n\tmargin-right: -0.8rem;\n}\n\n.w2c-message-warning {\n\tbackground-color: #fcf8e3;\n\tlist-style: none;\n\tpadding: 0.1em;\n}\n\n.w2c-message-error {\n\tbackground-color: #f2dede;\n\tlist-style: none;\n\tpadding: 0.1em;\n}\n\nspan.w2c-error {\n    font-size: 50%;\n    margin: 1em;\n    background-color: #ff0000;\n    color: white;\n    border-radius: 0.5em;\n    padding: 0.5em;\n    line-height: inherit;\n    vertical-align: middle;\n    box-shadow: 5px 5px 5px black;\n}\n\nspan.w2c-warning {\n    font-size: 50%;\n    margin: 1em;\n    background-color: yellow;\n    color: black;\n    border-radius: 0.5em;\n    padding: 0.5em;\n    line-height: inherit;\n    vertical-align: middle;\n    box-shadow: 5px 5px 5px black;\n}\n\nspan.w2c-ok {\n    font-size: 50%;\n    margin: 1em;\n    background-color: lightgreen;\n\tcolor: black;\n    border-radius: 0.5em;\n    padding: 0.5em;\n    line-height: inherit;\n    vertical-align: middle;\n    box-shadow: 5px 5px 5px black;\n}\n\n\n\n.w2c-content {\n\tclear:both;\n    }\n    \n    .w2c-nav { \n\tfont-size: small;\n    }\n    \n    .w2c-nav ul  {\n\t    list-style-type: none;\n\tmargin: 0;\n\tpadding: 0;\n\toverflow: hidden ;\n\tbackground-color: #eee; \n\twidth:100%;\n    }\n    \n    li.w2c-active {\n\tbackground-color: #aaa;\n\tfont-weight: bold;\n    }\n    \n    li.w2c-close {\n\tfloat: right !important;\n\tborder-right: none !important;\n    }\n    \n    .w2c-nav ul li {\n\tfloat:left;\n\tborder-right: 1px solid #000;\n    }\n    \n    li.w2c-active a {\n\tcolor: black !important;\n    }\n    \n    li.w2c-nav a {\n\tdisplay: block;\n\tpadding: 0.5em;\n\ttext-align: center;\n\ttext-decoration: none;\n\tcolor: #ccc; \n    }\n    \n    .w2c-nav li a:hover {\n\tbackground-color: #111;\n    }\n    \n    .w2c-nav li:nth-child(4) {\n\tborder-right: none;\n    }\n\n\n\n.w2c-received-results .c2m-error {\n\tmargin-top: 0.5em;\n}\n\n.w2c-loading {\n  border: 16px solid #f3f3f3; /* Light grey */\n  border-top: 16px solid #3498db; /* Blue */\n  border-radius: 50%;\n  width: 3em;\n  height: 3em;\n  animation: spin 2s linear infinite;\n  margin-left: 2em;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n/* Style the buttons that are used to open and close the accordion panel */\n.w2c-accordion {\n  background-color: #eee;\n  color: #444;\n  cursor: pointer;\n  font-weight: bold;\n  padding: 0.5em;\n  width: 100%;\n  text-align: left;\n  border: none;\n  outline: none;\n  transition: 0.4s;\n}\n\n/* Add a background color to the button if it is clicked on \n   (add the .active class with JS), and when you move the mouse over it (hover) \n */\n.w2c-active-accordion, .w2c-accordion:hover {\n  background-color: #ccc;\n}\n\n/* Style the accordion panel. Note: hidden by default */\n.w2c_panel {\n  padding: 0 18px;\n  background-color: #eeeeee;\n  display: none;\n  overflow: hidden;\n}\n\n.w2c-accordion:after {\n  content: \'+\'; /* Unicode character for "plus" sign (+) */\n  font-size: 13px;\n  color: #777;\n  float: right;\n  margin-left: 5px;\n}\n\n.w2c-active-accordion:after {\n  content: "-"; /* Unicode character for "minus" sign (-) */\n}\n</style>\n';class c2m_CheckHtmlView extends c2m_View{constructor(model,controller){super(model,controller)}render(){console.log("2. Check the HTML");let c2mDiv=this.createEmptyDialogDiv();c2mDiv.addEventListener("mammoth-results",this.renderUpdateResults.bind(this)),c2mDiv.addEventListener("mammoth-error",this.renderUpdateError.bind(this)),c2mDiv.insertAdjacentHTML("afterbegin",CHECK_HTML_HTML);let itemGroupContainer=document.querySelector("div#context_modules_sortable_container");itemGroupContainer.parentNode.insertBefore(c2mDiv,itemGroupContainer),this.configureAccordions(),document.querySelector("input#w2c-accordion").onclick=()=>this.controller.handleH2AsAccordionClick(),document.querySelector("input#w2c-leave-errors").onclick=()=>this.controller.handleLeaveErrorsClick(),document.getElementById("w2c-btn-close").onclick=()=>this.controller.handleClick(c2m_Initialised),document.getElementById("w2c-btn-confirm").onclick=()=>this.controller.handleClick(c2m_CheckModule),document.getElementById("w2c-btn-start-again").onclick=()=>this.controller.handleClick(c2m_ChooseWord),this.addW2cVersion()}renderUpdateResults(){let c2m_html=document.getElementById("c2m_html");c2m_html&&(c2m_html.innerHTML=this.model.wordConverter.mammothResult.value);let c2m_messages=document.getElementById("c2m_messages");if(c2m_messages){const numMessages=this.model.wordConverter.mammothResult.messages.length;document.getElementById("c2m_result").innerHTML+=`: ${numMessages} messages from conversion`;let messageHtml=this.generateMessageHtml(this.model.wordConverter.mammothResult.messages);c2m_messages.innerHTML=messageHtml}document.querySelector("div.w2c-waiting-results").style.display="none",document.querySelector("div.w2c-received-results").style.display="block",document.querySelector("button#w2c-btn-confirm").style.display="inline"}generateMessageHtml(messages){let messageHtml="<ul>";return messages.forEach((function(message){console.log(message),messageHtml+=`\n\t\t\t   <li class="w2c-message-${message.type}">${message.message}</li>`})),messageHtml+="</ul>",messageHtml}renderUpdateError(){let c2m_html=document.getElementById("c2m_html");c2m_html&&(c2m_html.innerHTML="<p>Error while converting the Word document</p>");let c2m_messages=document.getElementById("c2m_error_message");c2m_messages&&(c2m_messages.innerHTML=this.model.wordConverter.mammothError),document.querySelector("div.w2c-waiting-results").style.display="none",document.querySelector("div.w2c-error").style.display="block"}}class c2m_ModuleView extends c2m_View{constructor(model,controller){super(model,controller)}renderString(){const name=this.model.name,items=this.model.items,typeToIcon={Page:"icon-document",ExistingPage:"icon-document",File:"icon-paperclip",Discussion:"icon-discussion",Assignment:"icon-assignment",Quiz:"icon-quiz",ExternalUrl:"icon-link",ExternalTool:"icon-link",SubHeader:"icon-subheader"},typeToItemClass={Page:"wiki_page",ExistingPage:"wiki_page",File:"attachment",Discussion:"discussion-topic",Assignment:"assignment",Quiz:"lti-quiz",ExternalUrl:"external_url",SubHeader:"context_module_sub_header"};return`\n\n<div class="item-group-container">\n<div class="ig-list ui-sortable"> \x3c!-- overall list of modules (1 here) div --\x3e\n\n\x3c!-- start of module div --\x3e\n<div class="item-group-condensed context_module"\n  aria-label="${name}" data-workflow-state="active" style="">\n  <a id="c2m_sample_module"></a>\n\n  \x3c!-- start of module title/name div --\x3e\n  <div class="ig-header header" id="c2m_sample_module_header">\n    <h2 class="screenreader-only">${name}</h2>\n\t<span class="name" title="${name}">${name}</span>\n\n    \x3c!-- prerequisites --\x3e\n\n    <div class="prerequisites">\n        \x3c!-- need to set/unset display:none as required --\x3e\n      <div class="prerequisites_message" title="Prerequisites: " style="display: none;" >\n        Prerequisites: \x3c!-- TODO have a mechanism to set this --\x3e\n      </div>\n    </div>\n\n    <div class="requirements_message">\x3c!-- TODO --\x3e</div>\n\n  </div>\n\n\x3c!-- add the items --\x3e\n    \x3c!-- start of the items --\x3e\n\n  <div class="content" id="context_module_content_150" style="display: block;">\n    <ul class="ig-list items context_module_items manageable ui-sortable">\n\n  ${items.map((item=>`\n      <li id="${item.title}" style="" class="context_module_item ${typeToItemClass[item.type]}">\n        <div class="ig-row">\n          <a aria-label="${item.title}" tabindex="-1" class="for-nvda">\n\t\t    ${item.title}\n          </a>\n\n            <span class="type_icon" role="none">\n              <i class="${typeToIcon[item.type]}" style="display:inline-block !important"></i>\n            </span>\n \n          <div class="ig-info">\n            <div class="module-item-title">\n              <span class="item_name">\n                <a title="${item.title}" class="ig-title title item_link">\n                  ${item.title}  - (${item.type})\n                </a>\n                <span title="{item.title}" class="title locked_title">\n                  ${item.title} - (${item.type})\n                  </span>\n                <span class="points_possible" style="display: none;">TODO</span>\n                <span class="requirement" style="display: none;">TODO</span>\n                <span class="completion_requirement" style="display: none;">TODO</span>\n                <span class="position" style="display: none;">2</span>\n                \x3c!-- TODO this is the URL for the actual external link --\x3e\n                <span class="url" style="display: none;">TODO</span>\n                <span class="new_tab" style="display: none;">0</span>\n              </span>\n            </div>\n\n            <div class="module_item_icons nobr">\n              \x3c!-- dead code? --\x3e\n              <span class="criterion ">\n                <span class="min_score" style="display: none;">&nbsp;</span>\n                <span class="criterion_type" style="display: none;" >&nbsp;</span >\n              </span>\n              \x3c!-- /dead code --\x3e\n              <span class="type" style="display: none;">external_url</span>\n              <span class="id" style="display: none;">1078</span>\n              <span class="graded" style="display: none;">0</span>\n            </div>\n\n            <div class="ig-details">\n              <div class="requirement-description ig-details__item">\n                <span class="completion_requirement">\n                  <span class="requirement_type min_score_requirement">\n                    <span class="unfulfilled">\n                      Score at least <span class="min_score">&nbsp;</span>\n                      <span class="screenreader-only" >Must score at least\n                        <span class="min_score">&nbsp;</span> to complete this\n                        module item</span\n                      >\n                    </span>\n                    <span class="fulfilled">\n                      Scored at least <span class="min_score">&nbsp;</span>\n                      <span class="screenreader-only"\n                        >Module item has been completed by scoring at least\n                        <span class="min_score">&nbsp;</span></span >\n                    </span>\n                  </span>\n                  <span class="requirement_type must_view_requirement">\n                    <span class="unfulfilled">\n                      View\n                      <span class="screenreader-only"\n                        >Must view in order to complete this module item</span\n                      >\n                    </span>\n                    <span class="fulfilled">\n                      Viewed\n                      <span class="screenreader-only"\n                        >Module item has been viewed and is complete</span\n                      >\n                    </span>\n                  </span>\n                  <span class="requirement_type must_mark_done_requirement">\n                    <span class="unfulfilled">\n                      Mark as done\n                      <span class="screenreader-only"\n                        >Must mark this module item done in order to\n                        complete</span\n                      >\n                    </span>\n                    <span class="fulfilled">\n                      Marked as done\n                      <span class="screenreader-only"\n                        >Module item marked as done and is complete</span\n                      >\n                    </span>\n                  </span>\n                  <span class="requirement_type must_contribute_requirement">\n                    <span class="unfulfilled">\n                      Contribute\n                      <span class="screenreader-only"\n                        >Must contribute to this module item to complete\n                        it</span\n                      >\n                    </span>\n                    <span class="fulfilled">\n                      Contributed\n                      <span class="screenreader-only"\n                        >Contributed to this module item and is complete</span\n                      >\n                    </span>\n                  </span>\n                  <span class="requirement_type must_submit_requirement">\n                    <span class="unfulfilled">\n                      Submit\n                      <span class="screenreader-only"\n                        >Must submit this module item to complete it</span\n                      >\n                    </span>\n                    <span class="fulfilled">\n                      Submitted\n                      <span class="screenreader-only"\n                        >Module item submitted and is complete</span\n                      >\n                    </span>\n                  </span>\n                </span>\n              </div>\n              \x3c!-- requirement description end --\x3e\n            </div>\n          </div>\n          <div class="ig-admin">\n          </div> \n        </div>\n      </li>\n\n\n  `.trim())).join("")}\n    </ul>\n\t<div class="footer"></div>\n\t</div>\n</div>\n</div>\n  `}}const CHECK_MODULE_HTML='\n<div class="item-group-container" id="w2c-container">\n  <div class="item-group-condensed context_module">\n\n    <div class="ig-header header">\n       <span class="name">.docx 2 + Canvas Module</span>\n       <span class="w2c-version"></span>\n       <div class="ig-header-admin">\n         <button aria-label="Close .docx 2 Canvas Module" id="w2c-btn-close">X</button>\n       </div>\n    </div> \x3c!-- end ig-header --\x3e\n\n    <div class="content border border-trbl">\n\n<div class="w2c-nav">\n  <ul>\n    <li class="w2c-nav"><a href="#">1. Choose .docx</a></li>\n\t<li class="w2c-nav"><a href="#">2. Check HTML</a> </li>\n\t<li class="w2c-nav w2c-active"><a href="#">3. Check Module</a> </li>\n\t<li class="w2c-nav"><a href="#">4. Complete?</a></li>\n  </ul>\n</div>\n\n\n<div class="w2c-content pad-box-mini">\n\n<div id="w2c-choice">\n  <button id="w2c-btn-start-again" class="btn">\n    <i class="icon-arrow-left"></i>\n    Choose another .docx\n  </button>\n  <button id="w2c-btn-confirm" class="btn">\n    Create module\n    <i class="icon-arrow-right"></i>\n  </button>\n</div>\n\n  <div id="c2m_summary">\n  <h4>HTML to Canvas Module conversion completed</h4>\n\n  <p>Use the following to check the conversion before creating the module.</p>\n  </div>\n\n\n<button class="w2c-accordion" id="c2m_result">Messages - generated during conversion</button>\n<div class="w2c-panel">\n  <div id="c2m_messages"></div>\n</div>\n\n<button class="w2c-accordion">Module structure - generated by conversion</button>\n<div class="w2c-panel" id="c2m_module"></div>\n</div>\n\n    </div> \x3c!-- end content --\x3e\n\n  </div> \x3c!-- end item-group-condensed --\x3e\n</div> \x3c!-- end of w2c-container --\x3e\n\n\n<style>\n\n.w2c-version {\n  font-size: 60%;\n  color: #999;\n  vertical-align:text-bottom;\n  margin-left: 1em;\n}\n\n\n.w2c-content {\n    clear:both;\n}\n\n.w2c-nav { \n    font-size: small;\n}\n\n.w2c-nav ul  {\n\tlist-style-type: none;\n    margin: 0;\n    padding: 0;\n    overflow: hidden ;\n    background-color: #eee; \n    width:100%;\n}\n\nli.w2c-active {\n    background-color: #aaa;\n    font-weight: bold;\n}\n\nli.w2c-close {\n    float: right !important;\n    border-right: none !important;\n}\n\n.w2c-nav ul li {\n    float:left;\n    border-right: 1px solid #000;\n}\n\nli.w2c-active a {\n    color: black !important;\n}\n\nli.w2c-nav a {\n    display: block;\n    padding: 0.5em;\n    text-align: center;\n    text-decoration: none;\n    color: #ccc; \n}\n\n.w2c-nav li a:hover {\n    background-color: #111;\n}\n\n.w2c-nav li:nth-child(4) {\n    border-right: none;\n}\n\n.c2m-received-results {\n\tmargin-top: 0.5em;\n}\n\n/* Style the buttons that are used to open and close the accordion panel */\n.w2c-accordion {\n  background-color: #eee;\n  color: #444;\n  cursor: pointer;\n  font-weight: bold;\n  padding: 0.5em;\n  width: 100%;\n  text-align: left;\n  border: none;\n  outline: none;\n  transition: 0.4s;\n}\n\n/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n.w2c-active-accordion, .w2c-accordion:hover {\n  background-color: #ccc;\n}\n\n/* Style the accordion panel. Note: hidden by default */\n.w2c-panel {\n  padding: 0 18px;\n  background-color: #eeeeee;\n  display: none;\n  overflow: hidden;\n}\n\n.w2c-accordion:after {\n  content: \'+\'; /* Unicode character for "plus" sign (+) */\n  font-size: 13px;\n  color: #777;\n  float: right;\n  margin-left: 5px;\n}\n\n.w2c-active-accordion:after {\n  content: "-"; /* Unicode character for "minus" sign (-) */\n}\n</style>\n';class c2m_CheckModuleView extends c2m_View{constructor(model,controller){super(model,controller)}render(){console.log("3. Check the Canvas Module"),this.model.postProcessMammothResult(),this.model.testHtmlToModule();let c2mDiv=this.createEmptyDialogDiv();c2mDiv.insertAdjacentHTML("afterbegin",CHECK_MODULE_HTML);let itemGroupContainer=document.querySelector("div.item-group-container");itemGroupContainer.parentNode.insertBefore(c2mDiv,itemGroupContainer),document.getElementById("w2c-btn-close").onclick=()=>this.controller.handleClick(c2m_Initialised),document.getElementById("w2c-btn-start-again").onclick=()=>this.controller.handleClick(c2m_ChooseWord),document.getElementById("w2c-btn-confirm").onclick=()=>this.controller.handleClick(c2m_Completed),this.addW2cVersion(),Object.prototype.hasOwnProperty.call(this.model,"htmlConverter")&&this.model.htmlConverter.items_count>0&&this.renderConversionResults()}renderConversionResults(){const converter=this.model.htmlConverter;this.configureAccordions();let c2m_html=document.getElementById("c2m_module");if(c2m_html){let moduleView=new c2m_ModuleView(converter);c2m_html.innerHTML=moduleView.renderString()}let c2m_messages=document.getElementById("c2m_messages");c2m_messages&&(c2m_messages.innerHTML="no messages yet")}}const COMPLETE_HTML='\n\n<div class="item-group-container" id="w2c-container">\n  <div class="item-group-condensed context_module">\n\n    <div class="ig-header header">\n       <span class="name">.docx 2 + Canvas Module</span>\n       <span class="w2c-version"></span>\n       <div class="ig-header-admin">\n         <button aria-label="Close .docx 2 Canvas Module" id="w2c-btn-close">X</button>\n       </div>\n    </div> \x3c!-- end ig-header --\x3e\n\n    <div class="content border border-trbl">\n\n<div class="w2c-nav">\n  <ul>\n    <li class="w2c-nav"><a href="#">1. Choose .docx</a></li>\n\t<li class="w2c-nav"><a href="#">2. Check HTML</a> </li>\n\t<li class="w2c-nav"><a href="#">3. Check Module</a> </li>\n\t<li class="w2c-nav w2c-active"><a href="#">4. Complete?</a></li>\n  </ul>\n</div>\n\n\n<div class="w2c-content pad-box-mini">\n\n<div id="w2c-choice">\n  <button id="w2c-btn-start-again" class="btn">\n    <i class="icon-arrow-left"></i>\n    Choose another .docx\n  </button>\n</div>\n\n<div class="w2c-recieved-results" style="display:none">\n  <h4 class="text-success">Module created</h4>\n  <div id="w2c-summary">\n  <p>The module "<span id="w2c_module_name"></span>" was created with \n  <span id="w2c_module_num_items"></span> items.</p>\n  <p>Close this dialog to view the module and then choose to <a href="https://community.canvaslms.com/t5/Instructor-Guide/How-do-I-move-or-reorder-a-module/ta-p/1150">\n  move it</a> to its proper place.</p>\n  </div>\n</div>\n\n\n<div class="w2c-error" style="display:none">\n  <h4>Problem with creating the module</h4>\n  <p>Unable to create the new Module. Error message:\n  <blockquote><span class="text-error" id="c2m_error_message"></span></blockquote>\n  </p>\n\n  <h5>What next?</h5>\n  <p class="text-warning">\n  <i class="icon-Solid icon-warning" aria-hidden="true"></i>\n  <em>offer some sage advice</em>\n  </p>\n</div>\n\n\n<div class="w2c-waiting-results">\n<p><em>Waiting for creation of new module "<span id="w2c-module-name"></span>"</em></p>\n<div class="w2c-loading"></div>\n</div>\n\n<div class="w2c-progress">\n<h4>Progress</h4>\n<ol id="w2c-progress-list">\n  <li> <span class="w2c-progress-label">Module creation started</span> </li>\n</ol>\n</div>\n\n\n\n    </div> \x3c!-- end content --\x3e\n\n  </div> \x3c!-- end item-group-condensed --\x3e\n</div> \x3c!-- end of w2c-container --\x3e\n\n<style>\n\n\n.w2c-version {\n  font-size: 60%;\n  color: #999;\n  vertical-align:text-bottom;\n  margin-left: 1em;\n}\n\n.w2c-content {\n    clear:both;\n}\n\n.w2c-nav { \n    font-size: small;\n}\n\n.w2c-nav ul  {\n\tlist-style-type: none;\n    margin: 0;\n    padding: 0;\n    overflow: hidden ;\n    background-color: #eee; \n    width:100%;\n}\n\nli.w2c-active {\n    background-color: #aaa;\n    font-weight: bold;\n}\n\nli.w2c-close {\n    float: right !important;\n    border-right: none !important;\n}\n\n.w2c-nav ul li {\n    float:left;\n    border-right: 1px solid #000;\n}\n\nli.w2c-active a {\n    color: black !important;\n}\n\nli.w2c-nav a {\n    display: block;\n    padding: 0.5em;\n    text-align: center;\n    text-decoration: none;\n    color: #ccc; \n}\n\n.w2c-nav li a:hover {\n    background-color: #111;\n}\n\n.w2c-nav li:nth-child(4) {\n    border-right: none;\n}\n\n\n\n.w2c-recieved-results .w2c-error {\n\tmargin-top: 0.5em;\n}\n\n#w2c-progress-list {\n    font-size: small;\n}\n\n.w2c-progress-label {\n    font-size: small;\n}\n\n.w2c-loading {\n  border: 16px solid #f3f3f3; /* Light grey */\n  border-top: 16px solid #3498db; /* Blue */\n  border-radius: 50%;\n  width: 3em;\n  height: 3em;\n  animation: spin 2s linear infinite;\n  margin-left: 2em;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n</style>\n\n\n';class c2m_CompletedView extends c2m_View{constructor(model,controller){console.log("c2m_CompletedView constructor --------------"),super(model,controller)}render(){console.log("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 4. Complete");let c2mDiv=this.createEmptyDialogDiv();this.imageLinkErrors=0,this.fileLinkErrors=0,c2mDiv.addEventListener("w2c-empty-module-created",this.checkEmptyModuleCreated.bind(this)),c2mDiv.addEventListener("w2c-imageLink-found",this.checkImageLinkFound.bind(this)),c2mDiv.addEventListener("w2c-file-found",this.checkFileLinksFound.bind(this)),c2mDiv.addEventListener("w2c-item-found-created",this.checkItemFoundCreated.bind(this)),c2mDiv.addEventListener("w2c-module-item-added",this.checkModuleItemAdded.bind(this)),c2mDiv.addEventListener("w2c-module-error",this.renderCreationError.bind(this)),c2mDiv.insertAdjacentHTML("afterbegin",COMPLETE_HTML);let itemGroupContainer=document.querySelector("div.item-group-container");itemGroupContainer.parentNode.insertBefore(c2mDiv,itemGroupContainer),document.getElementById("w2c-btn-close").onclick=()=>this.controller.handleClick(c2m_Initialised),document.getElementById("w2c-btn-start-again").onclick=()=>this.controller.handleClick(c2m_ChooseWord),console.log("---- trying to create the module"),this.addW2cVersion(),this.model.createModule()}checkEmptyModuleCreated(){let moduleName=this.model.canvasModules.createdModule.name,id=this.model.canvasModules.createdModule.id;console.log(`created new module ${moduleName} with id ${id}`),this.addProgressList(`Empty module create: <em>${moduleName}</em>`),this.numFoundCreatedItems=0,this.numItemErrors=0,this.findImageMessage=!1,this.model.findImageLinks()}checkImageLinkFound(e){let index=e.detail.file,image=this.model.canvasModules.imageLinks[index];this.findImageMessage||(this.findImageMessage=!0,this.addProgressList(`<span class="text-info">Trying to find links for ${this.model.canvasModules.imageLinks.length} images</span>`)),"found"===image.status?"image"===image.response.mime_class?this.addProgressList(`Link for image named "<em>${image.name}</em>": found`):(this.addProgressList(`<span class="text-error">Wanted image file named "<em>${image.name}</em>" but found <em>${image.response.mime_class}</span>`),this.imageLinkErrors+=1):(this.addProgressList(`<span class="text-error">Link for image named "<em>${image.name}</em>": not found</span>`),this.imageLinkErrors+=1),this.model.canvasModules.numFoundImageLinks+=1,this.model.canvasModules.numFoundImageLinks===this.model.canvasModules.imageLinks.length&&(0===this.imageLinkErrors?this.addProgressList('<span class="text-success">All image links found</span>'):this.addProgressList(`<span class="text-error">Errors finding image links: ${this.imageLinkErrors} </span>`),this.model.findFileLinks())}checkFileLinksFound(e){console.log("---------------------- checkFileLinksFound"),console.log(e);let index=e.detail.file,file=this.model.canvasModules.fileLinks[index];console.log(`found file ${file.name} with id ${index}`),console.log(file),0===this.model.canvasModules.numFoundFileLinks&&this.addProgressList(`<span class="text-info">Trying to find links for ${this.model.canvasModules.fileLinks.length} files</span>`),"found"===file.status?this.addProgressList(`File "<em>${file.name}</em>": found`):(this.addProgressList(`<span class="text-error">File "<em>${file.name}</em>": not found</span>`),this.fileLinkErrors+=1),this.model.canvasModules.numFoundFileLinks+=1,this.model.canvasModules.numFoundFileLinks===this.model.canvasModules.fileLinks.length&&(0===this.fileLinkErrors?this.addProgressList(`<span class="text-success">${this.model.canvasModules.numFoundFileLinks} of ${this.model.canvasModules.fileLinks.length} files found</span>`):this.addProgressList(`<span class="text-error">${this.model.canvasModules.numFoundFileLinks} of ${this.model.canvasModules.fileLinks.length} files found\n                    - with ${this.fileLinkErrors} errors\n                    </span>\n                    `),this.model.findOrCreateModuleItems())}checkItemFoundCreated(e){console.log("OOOOOOOOOOOOOOOOOOO checkItemFoundCreated"),console.log(e);let index=e.detail.item,item=this.model.canvasModules.items[index];if(this.numFoundCreatedItems++,Object.hasOwnProperty.call(e,"error"))this.addProgressList(`\n                Error finding item "<em>${item.title}</em>": error - \n                <span class="text-error">${error}</span>`),this.numItemErrors++;else if(Object.hasOwnProperty.call(item,"createdItem")&&Object.hasOwnProperty.call(item.createdItem,"error")){const error=item.createdItem.error;this.addProgressList(`\n                Error finding item "<em>${item.title}</em>": error - \n                <span class="text-error">${error}</span>`),this.numItemErrors++}else this.addProgressList(`item "<em>${item.title}</em>" found or created\n              (created ${this.numFoundCreatedItems} out of \n                ${this.model.canvasModules.items.length})`);this.numFoundCreatedItems==this.model.canvasModules.items.length&&(0===this.numItemErrors?this.addProgressList(`\n            <span class="text-success">\n              <strong>All ${this.numFoundCreatedItems} items found or created\n              (created ${this.numFoundCreatedItems} out of ${this.model.canvasModules.items.length})</strong>\n            </span>`):this.addProgressList(`\n            <span class="text-error">\n              <strong>Unable to find ${this.numItemErrors} items (out of ${this.model.canvasModules.items.length}) for this module</strong>.\n              Ignoring those for now.\n            </span>`),this.addProgressList("Starting to add items to the module"),this.numAddedItems=0,this.numAddErrors=0,this.model.addModuleItem(this.numAddedItems))}checkModuleItemAdded(e){console.log("OOOOOOOOOOOOOOOOOOO checkItemFoundCreated"),console.log(e);let index=e.detail.item,item=this.model.canvasModules.items[index];this.numAddedItems++,item.added?this.addProgressList(`item (${item.title}) added to module in position ${index} \n                (added ${this.numAddedItems} out of ${this.model.canvasModules.items.length})`):(console.log(`OOOOOOOOOOOOOOOOOOOO error adding item ${item.title} -- ${item.error}`),this.addProgressList(`<span class="text-error">Error adding item "<em>${item.title}</em>": ${item.error}</span>`),this.numAddErrors++),this.numAddedItems!=this.model.canvasModules.items.length?this.model.addModuleItem(this.numAddedItems):(0===this.numAddErrors?(this.addProgressList(`\n            <span class="text-success"><strong>\n              All ${this.numFoundCreatedItems} items added to the module\n              (created ${this.numAddedItems} out of ${this.model.canvasModules.items.length})\n              </strong>\n            </span>`),this.addProgressList('<span class="text-success"><strong>Module created!</strong></span>')):this.addProgressList(`\n            <strong>Module created, but\n            <span class="text-error">\n              Unable to add ${this.numAddErrors} items (out of ${this.model.canvasModules.items.length}) for this module\n            </span>\n              </strong>`),this.renderCreationResults())}addProgressList(message){let progressList=document.getElementById("w2c-progress-list"),li=document.createElement("li");li.innerHTML=`\n        <span class="w2c-progress-label">${message}</span>\n        `,progressList.appendChild(li)}renderCreationResults(){let receivedDiv=document.querySelector("div.w2c-recieved-results");const result=this.model.canvasModules.createdModule;document.getElementById("w2c_module_name").innerHTML=result.name,document.getElementById("w2c_module_num_items").innerHTML=this.model.canvasModules.items.length,document.querySelector("div.w2c-waiting-results").style.display="none",receivedDiv.style.display="block"}renderCreationError(){let receivedDiv=document.querySelector("div.w2c-error");const error=this.model.canvasModules.createdModuleError;receivedDiv.innerHTML=`<h4>Error</h4>\n\t\t <p class="text-warning">${error}</p>`,document.querySelector("div.w2c-waiting-results").style.display="none",receivedDiv.style.display="block"}}const CI_CSS="\n\n.apa,\n.apa ul,\n.apa ol,\n.apa dl {\n  padding-left: 0 !important;\n  margin-left: 0 !important;\n  /*font-size: 80% !important;*/\n}\n\n.apa li {\n  list-style-type: none !important;\n}\n\n.apa p,\n.apa li,\n.apa dd,\np.apa {\n  margin-bottom: 1em !important;\n  margin-left: 2em !important;\n  margin-top: 1em !important;\n  text-indent: -2em !important;\n}\n\n/*****************************************************/\n/* Main body elements */\n\n/** Base Styles **/\ncode {\n  font-size: 95%;\n  color: #347ea4;\n  background: #f8f8f8;\n  padding: 0.4em;\n  margin: 0.5vw;\n}\n\np code {\n  padding: 0.125em;\n  margin: 0;\n}\n\n.blackboardContentLink,\n.blackboardMenuLink {\n  text-decoration: underline;\n  color: #347ea4 !important;\n}\n\ncite {\n  font-size: 80%;\n}\n\ncite:before {\n  margin-left: 1em;\n}\n\nhr {\n  border-top: 2px solid;\n  width: 98%;\n}\n\n/** Tables **/\n.table {\n  /*width: 99%;*/\n  border-collapse: collapse;\n  margin: 1em 0;\n}\n\n.table th {\n  font-weight: bold;\n}\n\n.table td,\n.table th {\n  padding: 6px;\n  text-align: left;\n  vertical-align: top;\n}\n\n.table tbody tr:nth-child(odd) {\n  border: 1px solid #757575;\n  border-width: 1px 0;\n}\n\n.table caption,\n.table .caption {\n  text-align: center;\n  font-style: italic;\n  color: #757575;\n  border-bottom: 1px solid #757575;\n  background: #f8f8f8;\n  padding: 0.5em 0;\n}\n\n/*.table .flex-row {\nwidth: 99%;\nmargin: 0;\nborder-collapse: collapse; }*/\n\n.table.stripe-row-odd tbody tr:nth-child(odd),\n.table.striped-odd .flex-row:nth-child(odd) {\n  background: #f0f0f0;\n  border: 1px solid #757575;\n  border-width: 1px 0;\n}\n\n/** Activity **/\n\n.action-box {\n  border-radius: 1em;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23) !important;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin: 1em auto;\n  width: 80%;\n}\n\n.activity {\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23) !important;\n  margin: 1em 0;\n  margin-left: auto;\n  margin-right: auto;\n  width: 95%;\n  border-radius: 1em;\n  border-style: outset;\n  padding: 1em;\n}\n\n.ael-note {\n  border-radius: 3px;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23) !important;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin: 1em auto;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 80%;\n  padding: 1em;\n  background-color: #ffdc0b !important;\n  color: #000000 !important;\n}\n\n.filmWatchingOptions {\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23) !important;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin: 1em 0;\n  margin-left: auto;\n  margin-right: auto;\n  width: 95%;\n  border-radius: 1em;\n  padding: 1em;\n}\n\n.activityImage {\n  width: 5%;\n  background-repeat: no-repeat;\n  background-size: contain; \n  margin-right: 1em;\n  float: left;\n}\n\n.readingImage {\n  width: 5%;\n  background-repeat: no-repeat;\n  background-size: contain; \n  margin-right: 1em;\n  float: left;\n}\n\n.noteImage {\n  width: 5%;\n  margin-top: 1em;\n  margin-bottom: 1em;\n  background-image: url('https://filebucketdave.s3.amazonaws.com/banner.js/images/Blk-Warning.png');\n  background-repeat: no-repeat;\n  background-size: contain;\n/*  margin-top: 1em; */\n}\n\n.noteImage img {\n  max-width: 100%;\n  max-height: 100%;\n}\n\n.filmWatchingOptionsImage {\n  width: 5%;\n  background-image: url('https://filebucketdave.s3.amazonaws.com/banner.js/images/icons8-movie-beginning-64.png');\nbackground-repeat: no-repeat;\nbackground-size: contain; \n}\n\n.filmWatchingOptionsImage img {\n  max-width: 100%;\n  max-height: 100%;\n}\n\n.activityNarrow {\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23) !important;\n  flex: 1 1 auto;\n  display: flex;\n\n  /*  flex-direction: row;\nflex-wrap: wrap;*/\n  margin: 1em 0;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.invisible {\n  display: none;\n}\n\n.reading {\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23) !important;\n  margin: 1em 0;\n  margin-left: auto;\n  margin-right: auto;\n  width: 95%;\n  padding: 1em;\n  border-radius: 1em;\n  border-style: outset;\n}\n\n.icon {\n  flex: 1 !important;\n  display: flex;\n  /*align-items: flex-start;*/\n  padding: 0.25em;\n  margin: 1em 0.5em;\n  justify-content: center;\n  align-items: flex-start;\n}\n\n.icon img {\n  max-width: 75%;\n  height: auto;\n  justify-content: center;\n  align-items: center;\n}\n\n/*#GU_ContentInterface .icon svg {\nwidth: 100%; }*/\n\n.instructions {\n  flex: 6;\n  margin-left: 1em;\n}\n\n.audio-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.table.stripe-row-even tbody tr:nth-child(even),\n.table.striped-even .flex-row:nth-child(even) {\n  background: #f8f8f8;\n  border: 1px solid #757575;\n  border-width: 1px 0;\n}\n\n.table .header .flex-column {\n  font-weight: bold;\n}\n\n.table .flex-row .flex-column {\n  padding: 6px;\n  text-align: left;\n}\n\n.table .flex-row.boxes > * {\n  box-shadow: 1px 0 0 0 #888, 0 1px 0 0 #888, 1px 1px 0 0 #888,\n    1px 0 0 0 #888 inset, 0 1px 0 0 #888 inset;\n}\n\n.table.boxes td {\n  border: 1px solid #757575 !important;\n}\n\n.table.boxes th {\n  border: 1px solid #757575 !important;\n}\n\n.table.stripe-col-first th:nth-of-type(1) {\n  background: #f8f8f8;\n}\n\n.table.stripe-col-odd td:nth-child(odd),\n.table.col-odd th:nth-child(odd) {\n  background: #f8f8f8;\n}\n\n.table.stripe-col-even td:nth-child(even),\n.table.col-even th:nth-child(even) {\n  background: #f8f8f8;\n}\n\n.table .flex-row + .flex-row {\n  margin-top: 0em !important;\n}\n\n.table .flex-row {\n  padding: 0.3em;\n}\n\n.table.table-bg,\n.table tr.table-bg {\n  opacity: 0.2;\n  color: #000000;\n}\n\n.video iframe,\n.video object,\n.video embed {\n  position: absolute;\n  top: 0;\n  left: 0;\n  /*width: 100%;\nheight: 100%;*/\n}\n\n/** timeline **/\n\n.timeline {\n  list-style-type: none !important;\n  min-width: 75%;\n  max-width: 75%;\n}\n\n.timeline li {\n  padding: 0.5em 1em;\n  border-left: 4px solid #e0e0e0;\n}\n\n.timeline h2 {\n  text-transform: uppercase;\n  font-size: 100%;\n  font-weight: bold;\n  margin: -1.25em 0 0.2em !important;\n  padding: 0;\n}\n\n.timeline h3 {\n  text-transform: uppercase;\n  font-size: 70%;\n  font-weight: bold;\n  color: #757575;\n  margin: -1.5em 0 0.2em !important;\n  padding: 0;\n}\n\n.timeline p {\n  padding: 0;\n}\n\n.timeline p span {\n  font-style: italic;\n  color: #757575;\n}\n\n.timeline li:before {\n  content: \"\";\n  text-transform: uppercase;\n  font-size: 50%;\n  background: #757575;\n  color: #ffffff;\n  display: inline-block;\n  text-align: center;\n  margin-left: -2.9em;\n  margin-right: 1em;\n  line-height: 2em;\n  width: 1.5em;\n  height: 1.5em;\n  border-radius: 50%;\n}\n\n/** Profle **/\n.flex-row .profile {\n  justify-content: center;\n}\n\n.profile h6,\n.profile p {\n  padding: 0;\n}\n\n.profile {\n  margin: 0 0.25vw;\n  padding: 0 0.25em;\n}\n\n.profile:not(:first-child) {\n  border-left: 1px solid #e0e0e0;\n}\n\n.profile figure {\n  margin: 0;\n}\n\n/** Flex Grid **/\n/* Use flex row as the container */\n.flex-row {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin: 1em auto;\n  width: 98%;\n}\n\n/** Colums set all items inside to stack on top of each other as the default **/\n.flex-column {\n  flex-direction: column;\n}\n\n.flex-column,\n.flex-column-quarter,\n.flex-column-half,\n.flex-column-2,\n.flex-column-3,\n._2up,\n._3up,\n._4up,\n._5up {\n  flex: 1 0 100%;\n  flex-direction: column;\n}\n\n/** Sets the dsplay of columns on 600px + displays **/\n@media screen and (min-width: 600px) {\n  .flex-column {\n    flex: 1;\n  }\n\n  .flex-column-quarter {\n    flex: 0.25;\n  }\n\n  .flex-column-half {\n    flex: 0.5;\n  }\n\n  .flex-column-2 {\n    flex: 2;\n  }\n\n  .flex-column-3 {\n    flex: 3;\n  }\n\n  ._2up {\n    flex: 0.5 1 48%;\n  }\n\n  ._3up {\n    flex: 0.3 1 28%;\n  }\n\n  ._4up {\n    flex: 0.25 1 23%;\n  }\n\n  ._5up {\n    flex: 0.2 1 18%;\n  }\n}\n/* Helpers for internal items and spacing */\n.flex-row img {\n  max-width: 100% !important;\n}\n\n.flex-row:first-child,\n:not(.flex-row) + .flex-row {\n  margin-top: 1em !important;\n}\n\n.flex-row + .flex-row {\n  margin-top: -1em !important;\n}\n\n.flex-row:last-child {\n  margin-bottom: 1em !important;\n}\n\n/* Flex Alignment */\n.flex-start {\n  justify-content: flex-start;\n}\n\n.flex-end {\n  justify-content: flex-end;\n}\n\n.flex-center {\n  justify-content: center;\n}\n\n.flex-align-start {\n  align-items: flex-start;\n}\n\n.flex-align-end {\n  align-items: flex-end;\n}\n\n.flex-align-center {\n  align-items: center;\n}\n\n.center-items {\n  align-items: center;\n}\n\n.center-self {\n  align-self: center;\n}\n\n.center-text {\n  text-align: center;\n}\n\n/* Add Flex to container or change direction */\n.flex-container {\n  display: flex;\n}\n\n.flex-direction-row {\n  flex-direction: row;\n}\n\n.flex-direction-column {\n  flex-direction: column;\n}\n\n.featured {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n/* Tile settings */\n.flex-tiles {\n  margin: 0;\n  align-items: stretch;\n  min-height: calc(100vh / 5);\n}\n\n.flex-tiles:first-child,\n:not(.flex-tiles) + .flex-tiles {\n  margin-top: 1em !important;\n}\n\n.flex-tiles:last-child {\n  margin-bottom: 1em !important;\n}\n\n.flex-tile-grout > * {\n  box-shadow: 2px 0 0 0 #fff, 0 2px 0 0 #ffffff, 2px 2px 0 0 #fff,\n    2px 0 0 0 #fff inset, 0 2px 0 0 #fff inset;\n}\n\n.flex-tile-fill {\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n}\n\n.flex-tile-fill img {\n  min-height: 100%;\n  min-width: 100%;\n  object-fit: cover;\n}\n\n/** Figure **/\nfigure {\n  max-width: 98% !important;\n  display: flex;\n  flex-flow: column;\n  border-radius: 1em;\n  align-items: center;\n  background: #f8f8f8;\n  padding: 0.15em;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23) !important;\n}\n\nfigure figcaption {\n  align-self: center;\n  text-align: center;\n  font-size: 60%;\n  color: #757575;\n  font-style: italic;\n  padding: 0.25em;\n}\n\nfigure img {\n  max-width: 100%;\n  border-radius: 1em;\n}\n\nfigure._30 {\n  width: 30%;\n  margin: 1vw 2.25vw !important;\n}\n\nfigure._50 {\n  width: 50%;\n  margin: 1vw 2.25vw !important;\n}\n\nfigure._60 {\n  width: 60%;\n  margin: 1vw 2.25vw !important;\n}\n\n.icon {\n  flex: 1 !important;\n  display: flex;\n  flex-direction: row;\n  align-items: top;\n  padding: 0.25em;\n  margin: 1em 0.5em;\n}\n\n.icon img {\n  width: 100%;\n}\n\n.icon svg {\n  width: 100%;\n}\n\n/* DJ kludges */\n\n.gu-red {\n  background-color: #c02424 !important;\n  color: #ffffff !important;\n}\n\n/** picture **/\n\n.pictureRight {\n  float: right;\n  font-size: 75%;\n  text-align: center;\n  margin-left: 2em;\n  margin-top: 2em;\n  margin-bottom: 2em;\n  padding: 5px;\n  border: solid 2px #efefef;\n  border-radius: 4px;\n  background-color: #dfdfdf;\n  /*  display: inline-block; */\n}\n\n.ci_container {\n  display: flex;\n  justify-content: center;\n}\n\n.picture {\n  margin: 2em;\n  font-size: 75%;\n  text-align: center;\n  padding: 5px;\n  border: solid 2px #cfcfcf;\n  border-radius: 4px;\n  background-color: #dfdfdf;\n  display: inline-block;\n  background-color: #dfdfdf;\n}\n\n.picture img {\n  width: 95%;\n  margin-bottom: 1em;\n}\n\n.example {\n  border-radius: 3px;\n  /*position: relative;  /*  <--- */\n  padding: 1rem 1.2rem;\n  max-width: 80%;\n  color: #4a4a4a;\n  margin: 1rem 1em 1em 2rem;\n  color: #4a4a4a;\n  background: #e8e8e8;\n  overflow: hidden;\n}\n\naside {\n  margin: 2em;\n  background-color: lightgray;\n  padding: 0.5em;\n  font-style: italic;\n}\n\n.exampleCentered {\n  text-align: center;\n  border-radius: 3px;\n  /*position: relative;  /*  <--- */\n  padding: 1rem 1.2rem;\n  max-width: 80%;\n  color: #4a4a4a;\n  margin: 1rem 1em 1em 2rem;\n  color: #4a4a4a;\n  background: #e8e8e8;\n  overflow: hidden;\n}\n\n@media print {\n  .ui-accordion .ui-accordion-content {\n    display: block !important;\n  }\n}\n\n.poem {\n  border-radius: 3px;\n  padding: 1rem 1.2rem;\n  max-width: 80%;\n  margin: 1rem 1em 1em 2rem;\n  background: #daf7a6;\n  overflow: hidden;\n}\n\n.poemRight {\n  text-align: right;\n  border-radius: 3px;\n  padding: 1rem 1.2rem;\n  max-width: 80%;\n  margin: 1rem 1em 1em 2rem;\n  background: #daf7a6;\n  overflow: hidden;\n}\n\n.goStartHere {\n  float: left;\n  width: 10%;\n  margin-top: 0.5em;\n  margin-right: 2em;\n  margin-bottom: 1em;\n}\n\n.goStartHere img {\n  max-width: 100%;\n  max-height: 100%;\n}\n\n.goReading {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin: 1em 0;\n  margin-left: auto;\n  margin-right: auto;\n  width: 95%;\n  padding: 1em;\n}\n.goReadingImage {\n  width: 5%;\n}\n\n.goActivity {\n  float: left;\n  width: 10%;\n  margin-top: 0.5em;\n  margin-right: 2em;\n  margin-bottom: 1em;\n}\n\n.goActivity img {\n  max-width: 100%;\n  max-height: 100%;\n}\n\n.goReflect {\n  float: left;\n  width: 10%;\n  margin-top: 0.5em;\n  margin-right: 2em;\n  margin-bottom: 1em;\n}\n\n.goReflect img {\n  max-width: 100%;\n  max-height: 100%;\n}\n\n.goWatch {\n  float: left;\n  width: 10%;\n  margin-top: 0.5em;\n  margin-right: 2em;\n  margin-bottom: 1em;\n}\n\n.goWatch img {\n  max-width: 100%;\n  max-height: 100%;\n}\n\n.goDownload {\n  float: left;\n  width: 10%;\n  margin-top: 0.5em;\n  margin-right: 2em;\n  margin-bottom: 1em;\n}\n\n.goDownload img {\n  max-width: 100%;\n  max-height: 100%;\n}\n\n.goNumberedList {\n  float: left;\n  width: 10%;\n  margin-top: 0.5em;\n  margin-right: 2em;\n  margin-bottom: 1em;\n}\n\n.goNumberedList img {\n  max-width: 100%;\n  max-height: 100%;\n}\n\n.ael-indent {\n  margin-left: 5em;\n}\n\n\n/* FAQ style accordion */\n\n /* Style the buttons that are used to open and close the accordion panel */\n/* .faqQuestion { */\nbutton.faqQuestion {\n   font-weight: bold;\n  background-color: #eee;\n  color: #444;\n  cursor: pointer;\n  padding: 1em;\n  width: 100%;\n  text-align: left;\n  border: none;\n  outline: none;\n  transition: 0.4s;\n}\n\n.faqQuestion:after {\n  content: '&#43;'; /* Unicode character for \"plus\" sign (+) */\n  font-size: 1em;\n  color: #777;\n  float: right;\n  margin-left: 5px;\n}\n\n.faqActive:after { \n  content: \"&#8722;\"; /* Unicode character for \"minus\" sign (-) */\n}\n\n/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n.faqActive, .faqQuestion:hover {\n  background-color: #ccc;\n}\n\n/* Style the accordion panel. Note: hidden by default */\n.faqAnswer {\n  padding: 0 2em;\n  background-color: white;\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.2s ease-out;\n} \n\n/****** Add the COM14 styles **************/\n\n.flashback { \n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23) !important;\n  margin: 1em 0;\n  margin-left: auto;\n  margin-right:auto;\n  width: 95%;\n  border-radius: 1em;\n  padding: 1em;\n  background: #ffd266;\n  overflow: hidden;\n}\n\n.flashbackImage {\n  width: 25%;\n  float: right;\n  background-image: url('https://s3.amazonaws.com/filebucketdave/banner.js/images/com14/flashback.png');\n  background-repeat: no-repeat;\n  background-size: contain; \n}\n\n.flashbackImage img {\n width: 95%;\n}\n\n.canaryImage {\n  width: 10%;\n  float: right;\n}\n\n.canaryImage img {\n  width: 95%;\n}\n\n.weeklyWorkoutImage {\n  width: 30%;\n  float: right;\n}\n\n.weeklyWorkoutImage img {\n  width: 95%;\n}\n\n\n.canaryExercise  {\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23) !important;\n  margin: 1em 0;\n  margin-left: auto;\n  margin-right: auto;\n  width: 95%; \n    border-radius: 1em;\n    padding: 1em;\n  background-color: #efd25c;\n  overflow: hidden;\n}\n\n.weeklyWorkout  {\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23) !important;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin: 1em 0;\n  margin-left: auto;\n  margin-right: auto;\n  width: 95%; \n    border-radius: 1em;\n    padding: 1em;\n  background-color: #cafafe;\n  overflow: hidden;\n}\n\n.comingSoon  {\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23) ;\n  margin: 1em 0;\n  margin-left: auto;\n  margin-right: auto;\n  width: 95%;\n  padding: 1em;\n  border-radius: 1em;\n  overflow: hidden;\n  border-style: outset;\n}\n\n.comingSoonImage {\n  float: left;\n  width: 15%;\n  background-repeat: no-repeat;\n  background-size: contain; \n}\n\n.printCourseName {\n  font-size: 80%;\n}\n.printPageTitle {\n  font-size: 160%;\n  font-weight:bolder;\n}\n\n.guAddedAdvice {\n\tfont-size:80%;\n}\n\n.quote {\n  border-left: 4px solid;\n  color: #757575;\n  margin: .5em 5vw !important;\n  padding: 1em;\n}\n\n    ",JUICE_IT=!0,DEFAULT_OPTIONS={styleMap:["p[style-name='Existing Canvas Page'] => h1.existingCanvasPage","p[style-name='Canvas Discussion'] => h1.canvasDiscussion","p[style-name='Canvas Assignment'] => h1.canvasAssignment","p[style-name='Canvas Quiz'] => h1.canvasQuiz","p[style-name='Canvas File'] => h1.canvasFile","p[style-name='Canvas Image'] => span.canvasImage","p[style-name='Canvas SubHeader'] => h1.canvasSubHeader","p[style-name='Canvas External Url'] => h1.canvasExternalUrl","p[style-name='Canvas External Tool'] => h1.canvasExternalTool","r[style-name='Talis Canvas Link'] => span.talisCanvasLink","r[style-name='Canvas File Link'] => span.canvasFileLink","p[style-name='Canvas File Link'] => span.canvasFileLink","r[style-name='Blackboard Image'] => span.blackboardImage","p[style-name='Blackboard Image p'] => p.blackboardImage","r[style-name='placeholder'] => mark","p[style-name='flashback'] => p.flashback","p[style-name='Weekly Workout'] => p.weeklyWorkout","p[style-name='Canary Exercise'] => p.canaryExercise","p[style-name='Note'] => p.ael-note","p[style-name='Added Advice'] => p.guAddedAdvice","p[style-name='activity'] => p.activity","p[style-name='Reading'] => p.reading","p[style-name='Coming Soon'] => p.comingSoon","p[style-name='Picture'] => p.picture","p[style-name='PictureRight'] => p.pictureRight","p[style-name='Quote'] => p.quote","p[style-name='Poem'] => div.poem","r[style-name='Poem Right'] => div.poemRight","p[style-name='Hide'] => div.Hide > p:fresh","p[style-name='FAQ Heading 1'] => div.faqHeading > p:fresh","p[style-name='FAQ body 1'] => div.faqBody > p:fresh","p[style-name='List Bullet'] => ul > li:fresh","p[style-name='List Number'] => ol > li:fresh","p[style-name='heading 6'] => h6:fresh","p[style-name='Section Title'] => h1:fresh","p[style-name='Quotations'] => blockquote:fresh","p[style-name='Quotation'] => blockquote:fresh","p[style-name='Body Text'] => p:fresh","p[style-name='Text'] => p:fresh","p[style-name='Default'] => p:fresh","p[style-name='Normal (Web)'] => p:fresh","p[style-name='Normal'] => p:fresh","p[style-name='Text body'] => p:fresh","p[style-name='Textbody1'] => p:fresh","r[style-name='University Date'] => span.universityDate","p[style-name='Video'] => div.video","p[style-name='Aside'] => aside","p[style-name='Film Watching Options'] => film-watch-options","r[style-name='Checkbox Char'] => span.checkbox","p[style-name='Checkbox'] => span.checkbox","r[style-name='Blue'] => span.blue","r[style-name='Red'] => span.red","p[style-name='Example'] => div.example > p:fresh","p[style-name='Example Centered'] => div.exampleCentered > p:fresh","p[style-name='Bibliography'] => div.apa > p:fresh","p[style-name='Title'] => div.moduleTitle","p[style-name='Card'] => div.gu_card","r[style-name='Emphasis'] => em:fresh","p[style-name='Timeout'] => span.timeout","p[style-name='Embed'] => span.embed","p[style-name='Blackboard Card'] => div.bbCard:fresh","p[style-name='Blackboard Item Heading'] => h1.blackboard","p[style-name='Blackboard Item Heading 2'] => h2.blackboard","r[style-name='Blackboard Item Link'] => span.blackboardLink","p[style-name='Blackboard Item Link'] => span.blackboardlink","r[style-name='Blackboard Item Link Char'] => span.blackboardLink","r[style-name='Blackboard Content Link'] => span.blackboardContentLink","r[style-name='Blackboard Menu Link'] => span.blackboardMenuLink","r[style-name='small'] => span.smallText","r[style-name='StrongCentered'] => span.strongCentered","r[style-name='Centered'] => span.centered","p[style-name='GO Start Here'] => div.goStartHere","p[style-name='GO Reflect'] => div.goReflect","p[style-name='GO Watch'] => div.goWatch","p[style-name='GO Download'] => div.goDownload","p[style-name='GO Numbered List'] => div.goNumberedList","p[style-name='GO Activity'] => div.goActivity","p[style-name='GO Reading'] => div.goReading > div.instructions > p:fresh"]},CI_STYLE_PREPEND={reading:'<div class="readingImage"><img src="https://filebucketdave.s3.amazonaws.com/banner.js/images/icons8-reading-48.png" alt="Reading" style="max-width:100%" /></div>',activity:'<div class="activityImage"><img src="https://filebucketdave.s3.amazonaws.com/banner.js/images/icons8-dancing-48.png" alt="Dancing Man - activity" style="max-width:100%" /></div>',flashback:'<div class="flashbackImage"><img src="https://s3.amazonaws.com/filebucketdave/banner.js/images/com14/flashback.png" style="max-width:100%" /></div>',canaryExercise:'<div class="canaryImage"><img src="https://s3.amazonaws.com/filebucketdave/banner.js/images/com14/Tweety.svg.png" style="max-width:100%" alt="Tweety bird" /></div>',"ael-note":'<div class="noteImage"><img src="https://filebucketdave.s3.amazonaws.com/banner.js/images/Blk-Warning.png" style="max-wdith:100%" alt="Warning! Exclamation mark in a circle" /></div>',weeklyWorkout:'<div class="weeklyWorkoutImage"><img src="https://filebucketdave.s3.amazonaws.com/banner.js/images/com14/weeklyWorkout.png" style="max-width:100%" alt="Female weight lifter" /></div>',comingSoon:'<div class="comingSoonImage"><img src="https://filebucketdave.s3.amazonaws.com/banner.js/images/com14/comingSoon.jpg" alt="Coming Soon Road Sign - yellow diamond shape" /> </div>',filmWatchingOptions:'<div class="filmWatchingOptionsImage">&nbsp;</div>',goReading:'<div class="goReadingImage">&nbsp;</div>'},CI_EMPTY_STYLE_PREPEND={goStartHere:'<div class="goStartHereImage"> <img src="https://app.secure.griffith.edu.au/gois/ultra/icons-regular/start-here.svg" /> </div>',goActivity:'<div class="goActivityImage"> <img src="https://app.secure.griffith.edu.au/gois/ultra/icons-regular/activity.svg" /> </div>',goReflect:'<div class="goReflectImage"> <img src="https://app.secure.griffith.edu.au/gois/ultra/icons-regular/reflection.svg" /> </div>',goWatch:'<div class="goWatchImage"> <img src="https://app.secure.griffith.edu.au/gois/ultra/icons-regular/video.svg" /> </div>',goDownload:'<div class="goDownloadImage"> <img src="https://app.secure.griffith.edu.au/gois/ultra/icons-regular/download.svg" /> </div>',goNumberedList:'<div class="goNumberedListImage"> <img src="https://app.secure.griffith.edu.au/gois/ultra/icons-regular/number-1.svg" /> </div>'},CHECK_HTML_ONCLICK='\nonclick=\'if((document.getElementById("c2m_html").style.display === "")||(document.getElementById("c2m_html").style.display ==="none")){ console.log("--- gong to click");document.getElementById("c2m_html_button").click(); } \'',TABLE_CLASS=["table","stripe-row-odd"],ACCORDION_TEMPLATE='\n<details style="margin-bottom: 0.5rem; padding: .5rem 1rem;">\n  <summary style="padding: 0.5rem; margin: -0.5rem; background: #efefef; border-radius: 5px; cursor: pointer; font-size: 1.2em;">\n    <strong>{TITLE}</strong>\n  </summary>\n  <div class="accordion-content" style="border-bottom-color: #efefef; border-bottom-style: solid; border-bottom-width: 2px; border-left-color: #efefef; border-left-style: solid; border-left-width: 2px; border-right-color: #efefef; border-right-style: solid; border-right-width: 2px;   padding: 1em; margin-left: -.5rem; margin-right: -0.5rem;">\n  {CONTENT}\n  </div>\n</details>\n';class c2m_WordConverter{constructor(){}decodeEntities(encodedString){let textArea=document.createElement("textarea");return textArea.innerHTML=encodedString,textArea.value}displayResult(result){this.mammothResult=result,this.postConvert(),this.generateWarnings();const event=new Event("mammoth-results");let c2m_dialog=document.querySelector("div.c2m_dialog");c2m_dialog&&c2m_dialog.dispatchEvent(event)}generateWarnings(){let doc=(new DOMParser).parseFromString(this.mammothResult.value,"text/html");this.checkEmptyHeadings(doc),this.checkBase64Images(doc),this.checkExternalUrls(doc),this.checkBlackboardUrls(doc),this.checkCIBlackboardStyles(doc),this.checkCanvasImages(doc),this.mammothResult.value=doc.documentElement.outerHTML}checkCIBlackboardStyles(doc){let foundStyles={};["h1.blackboard","h2.blackboard","span.blackboardLink","span.blackboardContentLink","span.blackboardMenuLink"].forEach((style=>{let elements=doc.querySelectorAll(style);for(let i=0;i<elements.length;i++){let element=elements[i],text=element.innerText,heading="not found";if(style.startsWith("h1."))heading=text;else{let previous=element.previousElementSibling||element.parentNode;for(;previous&&"H1"!==previous.tagName;)previous=previous.previousElementSibling||previous.parentNode;previous&&(heading=previous.innerText)}text.length>0&&(foundStyles[style]?foundStyles[style].push({text:text,heading:heading}):foundStyles[style]=[{text:text,heading:heading}])}}));for(const style in foundStyles){let message=`<p>Found Blackboard specific style - <em>${style}</em> - ${foundStyles[style].length} times:</p><ul>`;for(let i=0;i<foundStyles[style].length;i++)message+=`<li> under heading <em>${foundStyles[style][i].heading}</em> with text <em>${foundStyles[style][i].text}</em></li>`;message+="</ul>",this.mammothResult.messages.push({type:"error",message:message})}}checkEmptyHeadings(doc){let h1s=doc.querySelectorAll("h1"),empty=0;for(let i=0;i<h1s.length;i++){let h1=h1s[i];if(""===h1.innerHTML.trim()){empty+=1;const error='<span class="w2c-error">empty heading 1</span>';h1.insertAdjacentHTML("beforeend",error)}}empty>0&&this.mammothResult.messages.push({type:"error",message:`Found ${empty} empty Heading 1s (see below). Remove and try again.`})}checkExternalUrls(doc){let extUrls=doc.querySelectorAll("h1.canvasExternalUrl"),problems=[],validUrls={},error='<span {id} class="w2c-error">canvasExternalUrl</span>';for(let i=0;i<extUrls.length;i++){let extUrl=extUrls[i],content=this.nextUntil(extUrl,"h1");if(validUrls[extUrl.innerText]=!1,content){let valid=!1,invalid=!1;for(let j=0;j<content.length;j++)this.isValidHttpUrl(content[j].innerText)?valid=!0:invalid=!0;if(!valid||invalid){problems.push(extUrl.innerText);const numProbs=problems.length-1,errorString=error.replace("{id}",`id="canvas-external-url-${numProbs}"`);extUrl.insertAdjacentHTML("beforebegin",errorString)}}}error=`<a href="#canvas-external-url-{id}" ${CHECK_HTML_ONCLICK}><span class="w2c-error">canvasExternalUrl</span></a>`;for(let i=0;i<problems.length;i++){const errorString=error.replace("{id}",`${i}`);this.mammothResult.messages.push({type:"error",message:`${errorString} The Canvas External URL heading - <em>${problems[i]}</em> - contained more than just a URL.\n                                <small><strong><a target="_blank" \n                   href="https://djplaner.github.io/word-to-canvas-module/docs/warnings/externalUrlsProblems.html">\n                   For more <i class="icon-question"></i></a></strong></small>`})}}checkBlackboardUrls(doc){let links=doc.querySelectorAll("a"),error='<span {id} class="w2c-error">Blackboard Link</span>',blackboardLinks={},numError=0;for(let i=0;i<links.length;i++){let link=links[i];if(blackboardLinks[link.href]){blackboardLinks[link.href].push({text:link.innerText,count:numError});const errorString=error.replace("{id}",`id="blackboard-link-${numError}"`);numError+=1,link.insertAdjacentHTML("beforebegin",errorString)}else if(this.isBlackboardLink(link.href)){blackboardLinks[link.href]=[{text:link.innerText,count:numError}];const errorString=error.replace("{id}",`id="blackboard-link-${numError}"`);numError+=1,link.insertAdjacentHTML("beforebegin",errorString)}}error=`<a href="#blackboard-link-{id}" ${CHECK_HTML_ONCLICK}><span class="w2c-error">Blackboard Link</span></a>`;for(let link in blackboardLinks){let message=`Found Blackboard link - <em><small>${link}</small></em> - ${blackboardLinks[link].length} times, including:<ul>`;for(let i=0;i<blackboardLinks[link].length;i++){message+=` <li>${error.replace("{id}",`${blackboardLinks[link][i].count}`)} ${blackboardLinks[link][i].text}</li>`}message+="</ul>",this.mammothResult.messages.push({type:"error",message:message})}}isBlackboardLink(link){return link.includes("https://bblearn.griffith.edu.au")||link.includes("https://bblearn-blaed.griffith.edu.au")||link.includes("/webapps/blackboard")}checkBase64Images(doc){let imgs=doc.querySelectorAll("img"),base64=0;for(let i=0;i<imgs.length;i++){let img=imgs[i];if(img.src.indexOf("base64")>0){base64+=1;const error='<span class="w2c-error">base64 image</span>';img.insertAdjacentHTML("beforebegin",error)}}base64>0&&this.mammothResult.messages.push({type:"error",message:`Found ${base64} base64 images <small>(labeled in HTML)</small>. \n                           These will be replaced with placeholders.<br /> \n                           <small><strong>\n                             <a target="_blank" href="https://djplaner.github.io/word-to-canvas-module/docs/warnings/htmlConversion.html#base64-images">For more <i class="icon-question"></i></a></strong></small>`})}checkCanvasImages(doc){let canvasImages=doc.querySelectorAll("span.canvasImage"),message=`Found ${canvasImages.length} "Canvas Images" <small>(labeled in HTML)</small>. \n                       Broken images may be fixed in the final stage.<br /> \n                       <small><strong>\n                         <a target="_blank" href="https://djplaner.github.io/word-to-canvas-module/docs/warnings/canvasImages.html">For more <i class="icon-question"></i></a></strong></small>\n                         <ul>`;for(let i=0;i<canvasImages.length;i++){let imgSpan=canvasImages[i];const errorString='<span {id} class="w2c-warning">canvasImage</span>'.replace("{id}",`id="canvas-image-${i}"`);imgSpan.insertAdjacentHTML("beforebegin",errorString);let alt="<em>no alt text</em>",img=imgSpan.querySelector("img");img&&(alt=img.getAttribute("alt")),message+=`<li>${`<a href="#canvas-image-${i}" ${CHECK_HTML_ONCLICK}><span class="w2c-warning">canvasImage</span></a>`} image with <em>alt</em> text ${alt}</li>`}canvasImages.length>0&&(message+="</ul>",this.mammothResult.messages.push({type:"error",message:message}))}handleBlackboardImage(doc){let span=doc.querySelector("span.blackboardImage");for(;span;){let tmpSpan=doc.createElement("span");for(tmpSpan.classList.add("canvasImage"),span.parentNode.insertBefore(tmpSpan,span);span&&"SPAN"===span.tagName&&"blackboardImage"===span.className;){let content=span.innerHTML;tmpSpan.innerHTML+=content;let oldSpan=span;span=span.nextElementSibling,oldSpan.parentNode.removeChild(oldSpan)}tmpSpan.innerHTML=this.decodeEntities(tmpSpan.innerHTML),span=doc.querySelector("span.blackboardImage")}}handleFAQs(doc){let heading=doc.querySelector("div.faqHeading");for(;heading;){let nextSibling=heading.nextElementSibling;if("DIV"===nextSibling.tagName&&"faqBody"===nextSibling.className){let bodyContent=nextSibling.innerHTML;nextSibling.parentNode.removeChild(nextSibling);let headingContent=heading.innerHTML,details=doc.createElement("details");details.style.backgroundColor="#f8f4ec",details.style.color="#7c2529",details.style.borderBottom="1px solid #e4d589",details.style.marginLeft="2em",details.style.marginRight="4em",details.style.fontSize="90%";let summary=doc.createElement("summary");summary.style.padding=".5em",summary.style.backgroundColor="#f0f0f0",summary.style.color="#000000",headingContent=headingContent.replace(/<p[^>]*>/g,""),headingContent=headingContent.replace(/<\/p>/g,""),summary.innerHTML=headingContent,summary.innerHTML=`<h4 style="display:inline;font-size:80%">${summary.innerHTML}</h4>`,details.appendChild(summary),details.innerHTML+=bodyContent,heading.parentNode.replaceChild(details,heading)}heading=doc.querySelector("div.faqHeading")}}postConvert(){let doc=(new DOMParser).parseFromString(this.mammothResult.value,"text/html"),embeds=doc.querySelectorAll("span.embed");for(let i=0;i<embeds.length;i++){let embed=embeds[i];console.error(embed.innerHTML),embed.innerHTML=this.decodeEntities(embed.innerHTML),console.error(embed.innerHTML)}this.handleBlackboardImage(doc);let links=doc.querySelectorAll("span.talisCanvasLink");for(let i=0;i<links.length;i++){let link=links[i],anchor=document.createElement("a");anchor.href="https://lms.griffith.edu.au/courses/252/external_tools/111",anchor.innerHTML=link.innerHTML,link.innerHTML="",link.appendChild(anchor)}let hiddenElems=doc.querySelectorAll("div.Hide");for(let i=0;i<hiddenElems.length;i++){let hiddenElem=hiddenElems[i];hiddenElem.parentNode.removeChild(hiddenElem)}doc.querySelectorAll("table").forEach((elem=>{TABLE_CLASS.forEach((tableClass=>{elem.classList.add(tableClass)}))})),this.handleFAQs(doc),this.handleContentInterfaceComplexStyles(doc),this.contentInterfacePreprends(doc),JUICE_IT&&(doc=this.juiceit(doc)),this.mammothResult.value=doc.documentElement.outerHTML}handleContentInterfaceComplexStyles(doc){let firstDiv=null,nextDiv=null;const ci_styles=["p.flashback","p.canaryExercise","p.weeklyWorkout","p.ael-note","p.guAddedAdvice","p.reading","p.activity","p.comingSoon","p.picture","p.pictureRight","div.poem","div.poemRight"];for(const ci_style of ci_styles){let ps=doc.querySelectorAll(ci_style),count=0;for(;ps.length>1&&count<ps.length;){firstDiv=ps[count],nextDiv=ps[count+1],count+=2;let content=this.nextUntil(firstDiv,ci_style);content=content.map((elem=>elem.outerHTML)),content=content.join("");let start=firstDiv;for(;start.nextElementSibling&&start.nextElementSibling!==nextDiv;)start.nextElementSibling.remove();nextDiv.remove();let newFirstDiv=document.createElement("div");if(ci_style.includes("div.poem")){newFirstDiv.innerHTML=content;const className=ci_style.substring(4);newFirstDiv.classList.add(className)}else{newFirstDiv.innerHTML=`<div class="instructions">${content}</div>`;const className=ci_style.substring(2);newFirstDiv.classList.add(className)}firstDiv.parentNode.replaceChild(newFirstDiv,firstDiv)}}}contentInterfacePreprends(doc){for(const divstyle in CI_STYLE_PREPEND){let selector=`div.${divstyle}`;doc.querySelectorAll(selector).forEach((function(elem){elem.insertAdjacentHTML("afterbegin",CI_STYLE_PREPEND[divstyle])}))}for(const divstyle in CI_EMPTY_STYLE_PREPEND){let selector=`div.${divstyle}`;doc.querySelectorAll(selector).forEach((function(elem){elem.insertAdjacentHTML("afterbegin",CI_EMPTY_STYLE_PREPEND[divstyle])}))}}displayError(error){this.mammothError=error,this.mammothResult=void 0;const event=new Event("mammoth-error");let c2m_dialog=document.querySelector("div.c2m_dialog");c2m_dialog&&c2m_dialog.dispatchEvent(event)}handleFileSelect(event){let file=event.target.files[0],reader=new FileReader;reader.onload=loadEvent=>this.callBack(loadEvent),reader.readAsArrayBuffer(file)}callBack(loadEvent){let arrayBuffer=loadEvent.target.result;console.log("-------------- doing the call back"),mammoth.convertToHtml({arrayBuffer:arrayBuffer},DEFAULT_OPTIONS).then((result=>this.displayResult(result))).catch((error=>this.displayError(error))).done(),console.log("-------------- done the call back")}readFileInputEventAsArrayBuffer(event){let file=event.target.files[0],reader=new FileReader;reader.onload=loadEvent=>this.callBack(loadEvent),reader.readAsArrayBuffer(file)}isValidHttpUrl(string){let url;try{url=new URL(string)}catch(_){return!1}return"http:"===url.protocol||"https:"===url.protocol}nextUntil(elem,selector,filter){var siblings=[];for(elem=elem.nextElementSibling;elem&&!elem.matches(selector);)!filter||elem.matches(filter)?(siblings.push(elem),elem=elem.nextElementSibling):elem=elem.nextElementSibling;return siblings}juiceit(doc){doc.body.insertAdjacentHTML("afterbegin",`<style>${CI_CSS}</style>`);let html=doc.documentElement.outerHTML,juiceHTML=juice(html);return(new DOMParser).parseFromString(juiceHTML,"text/html")}h2sAsAccordions(){let accordion=document.querySelector("input#w2c-accordion");accordion?accordion.checked?this.h2ToAccordion():this.accordionToH2():console.log("input#w2c-accordion not found")}h2ToAccordion(){console.log("h2ToAccordion");let html=document.querySelector("div#c2m_html").innerHTML,doc=(new DOMParser).parseFromString(html,"text/html"),h2s=doc.querySelectorAll("h2");for(let i=0;i<h2s.length;i++){let h2Text=h2s[i].innerText,h2Content=this.nextUntil(h2s[i],"h1,h2"),content=h2Content.map((elem=>elem.outerHTML));content=content.join("");let accordionHtml=ACCORDION_TEMPLATE;accordionHtml=accordionHtml.replace("{TITLE}",h2Text),accordionHtml=accordionHtml.replace("{CONTENT}",content),h2s[i].insertAdjacentHTML("beforebegin",accordionHtml),h2s[i].remove();for(let j=0;j<h2Content.length;j++)h2Content[j].remove()}let html2=doc.documentElement.outerHTML;document.querySelector("div#c2m_html").innerHTML=html2,this.mammothResult.value=html2}accordionToH2(){console.log("accordionToH2");let html=document.querySelector("div#c2m_html").innerHTML,doc=(new DOMParser).parseFromString(html,"text/html"),details=doc.querySelectorAll("details");for(let i=0;i<details.length;i++){let summary=details[i].querySelector("summary").innerHTML;summary=summary.replace("<strong>",""),summary=summary.replace("</strong>","");let content=details[i].querySelector(".accordion-content").innerHTML,newDiv=document.createElement("div");newDiv.innerHTML=`<h2>${summary}</h2>${content}`,details[i].insertAdjacentElement("beforebegin",newDiv),details[i].remove()}let html2=doc.documentElement.outerHTML;document.querySelector("div#c2m_html").innerHTML=html2,this.mammothResult.value=html2}}const HTML_CLASS_TO_ITEM_TYPE={canvasFile:"File",canvasPage:"Page",existingCanvasPage:"ExistingPage",canvasDiscussion:"Discussion",canvasAssignment:"Assignment",canvasQuiz:"Quiz",canvasSubHeader:"SubHeader",canvasExternalUrl:"ExternalUrl",canvasExternalTool:"ExternalTool"};class c2m_HtmlConverter{constructor(html){this.html=html,this.name="",this.items=[],this.htmlDiv=document.createElement("div"),this.htmlDiv.innerHTML=html.trim(),this.updateModuleTitle(),this.updateModuleItems(),this.dump()}updateModuleTitle(){let titleDivs=this.htmlDiv.querySelectorAll("div.moduleTitle");1===titleDivs.length?(this.name=titleDivs[0].innerText,""===this.name.trim()&&(this.name="Untitled")):console.error(`c2m_HtmlConverter -> updateModuleTitle: wrong # (${titleDivs.length}) div.name found `)}updateModuleItems(){let h1s=this.htmlDiv.querySelectorAll("h1");this.items=[],h1s.forEach((h1=>{let item={};if(item.title=h1.innerText,item.type=this.getType(h1),item.content=this.getContent(h1,item.type),item.error=!1,"ExternalUrl"!==item.type&&"ExternalTool"!==item.type||item.content.match(/^(http|https):\/\/[^ "]+$/)||(item.error=!0,item.errorString="Couldn't find a valid URL"),"File"===item.type){let contentObj={displayName:item.title,fileName:item.title};""!==item.content.trim()&&(contentObj.fileName=item.content),item.content=contentObj}this.items.push(item)})),this.items_count=this.items.length}getType(h1){let className=h1.className;return HTML_CLASS_TO_ITEM_TYPE[className]?HTML_CLASS_TO_ITEM_TYPE[className]:"Page"}getContent(h1,type){let content=this.nextUntil(h1,"h1");if(["ExternalUrl","ExternalTool","File"].includes(type)){let text="";return content.forEach((element=>{text+=element.innerText})),text}return content=content.map((elem=>elem.outerHTML)),content=content.join(""),content}nextUntil(elem,selector,filter){var siblings=[];for(elem=elem.nextElementSibling;elem&&!elem.matches(selector);)!filter||elem.matches(filter)?(siblings.push(elem),elem=elem.nextElementSibling):elem=elem.nextElementSibling;return siblings}dump(){console.log("c2m_HtmlConverter -> dump:"),console.log(`name: ${this.name} with ${this.items_count} items`),this.items.forEach(((item,index)=>{console.log(`item ${index}: ${item.title} (type:${item.type})`),console.log(item)}))}}class c2m_Modules{constructor(courseId,token){this.courseId=courseId,this.csrfToken=token}async getAllModules(items=!0){let itemsOption="?include=items",pagesOption="&per_page=100";items||(itemsOption="",pagesOption="?per_page=100");let callUrl=`/api/v1/courses/${this.courseId}/modules${itemsOption}${pagesOption}`;await fetch(callUrl,{method:"GET",credentials:"include",headers:{Accept:"application/json","X-CSRF-Token":this.csrfToken}}).then(this.status).then((response=>response.json())).then((json=>{this.allModules=json,console.log(`c2m_Modules -> getAllModules: ${this.allModules}`),console.log(json)})).catch((error=>{console.error(`c2m_Modules -> getAllModules error: ${error}`)}))}async createModule(newModule){let callUrl=`/api/v1/courses/${this.courseId}/modules`;this.createdModuleError=void 0,this.createdModule=void 0,this.createdModuleItems=[],await fetch(callUrl,{method:"POST",credentials:"include",headers:{"Content-Type":"application/json",Accept:"application/json","X-CSRF-Token":this.csrfToken},body:JSON.stringify({module:{name:newModule.name,position:1}})}).then(this.status).then((response=>response.json())).then((json=>{this.createdModule=json,console.log(`c2m_Modules -> createModules: ${this.createdModule}`),console.log(json),this.dispatchEvent("w2c-empty-module-created")}))}async addModuleItem(index){let item=this.items[index],moduleId=this.createdModule.id,callUrl=`/api/v1/courses/${this.courseId}/modules/${moduleId}/items`,body={module_item:{title:item.title,position:index+1,type:item.type}};["File","Discussion","Assignment","Quiz"].includes(item.type)&&(body.module_item.content_id=item.createdItem.id),"Page"!==item.type&&"ExistingPage"!==item.type||(body.module_item.page_url=item.createdItem.url,body.module_item.type="Page"),["ExternalUrl","ExternalTool"].includes(item.type)&&(body.module_item.external_url=item.content),await fetch(callUrl,{method:"POST",credentials:"include",headers:{"Content-Type":"application/json",Accept:"application/json","X-CSRF-Token":this.csrfToken},body:JSON.stringify(body)}).then(this.status).then((response=>response.json())).then((json=>{item.addedItem=json,item.added=!0,this.dispatchEvent("w2c-module-item-added",{item:index})})).catch((error=>{console.log(`canvas::c2m_Modules::addModuleItem - caught error - ${error}`),item.error=error,item.added=!1,this.dispatchEvent("w2c-module-item-added",{item:index})}))}async createPage(index){let item=this.items[index],callUrl=`/api/v1/courses/${this.courseId}/pages`;await fetch(callUrl,{method:"POST",credentials:"include",headers:{"Content-Type":"application/json",Accept:"application/json","X-CSRF-Token":this.csrfToken},body:JSON.stringify({wiki_page:{title:item.title,body:item.content,editing_roles:"teachers"}})}).then(this.status).then((response=>response.json())).then((json=>{item.createdItem=json,console.log(`c2m_Modules -> createPage: index ${index} title ${item.createdItem.title}`),console.log(json),this.dispatchEvent("w2c-item-found-created",{item:index})}))}async findFile(index,event="w2c-file-found"){let itemList;"w2c-file-found"===event?itemList=this.fileLinks:"w2c-imageLink-found"===event&&(itemList=this.imageLinks);let file=itemList[index],searchTerm=file.name;console.log(`--- FindFile: ${searchTerm}`);let callUrl=`/api/v1/courses/${this.courseId}/files?`+new URLSearchParams({search_term:searchTerm});file.status="searching",await fetch(callUrl,{method:"GET",credentials:"include",headers:{"Content-Type":"application/json",Accept:"application/json","X-CSRF-Token":this.csrfToken}}).then(this.status).then((response=>response.json())).then((json=>{this.findFileInList(json,index,itemList),this.dispatchEvent(event,{file:index})})).catch((error=>{console.log(`canvas::c2m_Modules::findFile - caught error - ${error}`),file.status="error",this.dispatchEvent(event,{file:index})}))}async findItem(index){let item=this.items[index],type=item.type;const TYPE_API_URL={ExistingPage:`/api/v1/courses/${this.courseId}/pages?`,File:`/api/v1/courses/${this.courseId}/files?`,Discussion:`/api/v1/courses/${this.courseId}/discussion_topics?`,Assignment:`/api/v1/courses/${this.courseId}/assignments?`,Quiz:`/api/v1/courses/${this.courseId}/quizzes?`};let searchTerm=item.title;"File"===type&&(searchTerm=item.content.fileName);let callUrl=TYPE_API_URL[type]+new URLSearchParams({search_term:searchTerm});await fetch(callUrl,{method:"GET",credentials:"include",headers:{"Content-Type":"application/json",Accept:"application/json","X-CSRF-Token":this.csrfToken}}).then(this.status).then((response=>response.json())).then((json=>{this.findItemInList(json,index),this.dispatchEvent("w2c-item-found-created",{item:index})})).catch((error=>{console.log(`canvas::c2m_Modules::findItem - caught error - ${error}`),this.dispatchEvent("w2c-item-found-created",{item:index,error:`Error finding item - ${error}`})}))}findItemInList(list,index){let item=this.items[index],type=item.type;for(let i=0;i<list.length;i++){let element=list[i],elementName="",itemName=item.title.trim();if("File"===type?(elementName=element.display_name.trim(),itemName=item.content.fileName.trim()):elementName="Assignment"===type?element.name.trim():element.title.trim(),elementName.includes(itemName))return void(item.createdItem=element)}item.createdItem={error:`file not found: ${item.title}`,index:index}}findFileInList(list,index,searchList){let file=searchList[index];for(let i=0;i<list.length;i++){let element=list[i],elementName=element.display_name.trim(),fileName=file.name.trim();if(elementName.includes(fileName))return file.response=element,void(file.status="found")}file.status="not found"}status(response){return response.status>=200&&response.status<300?Promise.resolve(response):(console.log("---- STATUS bad response status"),console.log(response),Promise.reject(new Error(response.statusText)))}json(response){return response.json()}dispatchEvent(eventName,eventData={}){const event=new CustomEvent(eventName,{detail:eventData});let c2m_dialog=document.querySelector("div.c2m_dialog");c2m_dialog&&c2m_dialog.dispatchEvent(event)}}class c2m_Model{constructor(controller){this.keepErrors=!1,this.controller=controller,this.wordConverter=new c2m_WordConverter,this.canvasModules=new c2m_Modules(this.controller.courseId,this.controller.csrfToken)}getCurrentModules(){this.canvasModules.getAllModules().then((()=>{console.log("c2m_Model -> getAllModules: finished "),console.log(this.canvasModules.allModules)}))}createModule(){this.canvasModules.items=this.htmlConverter.items,this.canvasModules.createModule(this.htmlConverter).then()}findImageLinks(){let items=this.htmlConverter.items;this.canvasModules.imageLinks=[],this.canvasModules.numFoundImageLinks=0;let parser=new DOMParser;for(let i=0;i<items.length;i++){let body=items[i].content,imageLinks=parser.parseFromString(body,"text/html").querySelectorAll("span.canvasImage");console.log(`found ${imageLinks.length} file links in item ${i}`);for(let j=0;j<imageLinks.length;j++){let name=this.extractImageFileName(imageLinks[j]);if(name){let newImageLink={itemIndex:i,name:name,descriptor:void 0,status:"initialised",response:void 0,event:"w2c-imageLink-found"};this.canvasModules.imageLinks.push(newImageLink)}}}0===this.canvasModules.imageLinks.length&&this.findFileLinks();for(let i=0;i<this.canvasModules.imageLinks.length;i++)this.canvasModules.findFile(i,"w2c-imageLink-found").then((()=>{}))}extractImageFileName(imageSpan){let img=imageSpan.querySelector("img");if(img){let src=img.src.replace(document.baseURI.replace(/modules$/,""),"");if(!src.startsWith("http"))return src}}findFileLinks(){let items=this.htmlConverter.items;this.canvasModules.fileLinks=[],this.canvasModules.numFoundFileLinks=0;let parser=new DOMParser;for(let i=0;i<items.length;i++){let body=items[i].content;console.log(`item ${i} content`),console.log(body);let fileLinks=parser.parseFromString(body,"text/html").querySelectorAll("span.canvasFileLink");console.log(`found ${fileLinks.length} file links in item ${i}`);for(let j=0;j<fileLinks.length;j++){let{name:name,descriptor:descriptor}=this.setNameDescriptor(fileLinks[j]),newFileLink={itemIndex:i,name:name,descriptor:descriptor,status:"initialised",response:void 0,event:"w2c-file-found"};this.canvasModules.fileLinks.push(newFileLink)}}0===this.canvasModules.fileLinks.length&&this.findOrCreateModuleItems();for(let i=0;i<this.canvasModules.fileLinks.length;i++)this.canvasModules.findFile(i,"w2c-file-found").then((()=>{}))}setNameDescriptor(fileLink){let parent=fileLink.parentElement,name=fileLink.innerText,descriptor=fileLink.innerText;if("A"===parent.tagName){1===parent.children.length&&(name=decodeURI(parent.href),name=name.substring(name.lastIndexOf("/")+1),descriptor=decodeURI(parent.innerText))}return{name:name,descriptor:descriptor}}findOrCreateModuleItems(){console.log("c2m_Model -> findOrCreateModuleItems");let items=this.htmlConverter.items;for(let i=0;i<items.length;i++)this.findOrCreateItem(i);console.log("------------- END of create module items")}replaceCanvasFileLinks(index){let fileLinks=this.canvasModules.fileLinks.filter((fileLink=>fileLink.itemIndex===index));if(0===fileLinks.length)return;console.log("------------- replaceCanvasFileLinks");let item=this.htmlConverter.items[index],htmlFileLinks=(new DOMParser).parseFromString(item.content,"text/html").querySelectorAll("span.canvasFileLink");htmlFileLinks.length!==fileLinks.length&&console.log(`replaceCanvasFileLinks: number of fileLinks ${fileLinks.length}                 does not match number of htmlFileLinks ${htmlFileLinks.length}`);for(let i=0;i<htmlFileLinks.length;i++)if("found"===fileLinks[i].status){let response=fileLinks[i].response,fileUrl=`https://${document.host}/courses/${this.canvasModules.courseId}/files/${response.id}`,template=`\n                <a id="${response.id}" class="instructure_file_link instructure_scribd_file inline_disabled" \n                   href="${fileUrl}?wrap=1" target="_blank" rel="noopener" \n                   data-canvas-previewable="true" \n                   data-api-endpoint="${fileUrl}" data-api-returntype="File">\n                   ${fileLinks[i].descriptor}\n                </a>`,originalLink=htmlFileLinks[i].outerHTML;console.log(`replaceCanvasFileLinks: replacing **${originalLink}** with **${template}**`),item.content=item.content.replace(originalLink,template),console.log(item.content)}}replaceCanvasImageLinks(index){console.log("------------- replaceCanvasImageLinks");let imageLinks=this.canvasModules.imageLinks.filter((imageLink=>imageLink.itemIndex===index));if(0===imageLinks.length)return;console.log("------------- replaceCanvasImageLinks - starting");let item=this.htmlConverter.items[index],htmlImageLinks=(new DOMParser).parseFromString(item.content,"text/html").querySelectorAll("span.canvasImage");htmlImageLinks.length!==imageLinks.length&&console.log(`replaceCanvasFileLinks: number of imageLinks ${imageLinks.length}                 does not match number of htmlImageLinks ${htmlImageLinks.length}`);for(let i=0;i<htmlImageLinks.length;i++)if("found"===imageLinks[i].status){const response=imageLinks[i].response,imageUrl=`https://${document.host}/courses/${this.canvasModules.courseId}/files/${response.id}/download`,originalHtml=htmlImageLinks[i].outerHTML;let imageTag=htmlImageLinks[i].querySelector("img");const originalSrc=imageTag.src;imageTag.src=imageUrl;const newHtml=htmlImageLinks[i].outerHTML;console.log(`replaceCanvasImageLinks: replacing **${originalSrc}** with **${imageUrl}**`),item.content=item.content.replace(originalHtml,newHtml)}}findOrCreateItem(index){let item=this.canvasModules.items[index];switch(console.log("CCCCCCCCCCCCCCCCCCCCCCCCCCCC"),console.log("findORCreateItem"),item.type){case"Page":this.replaceCanvasImageLinks(index),this.replaceCanvasFileLinks(index),this.canvasModules.createPage(index).then((()=>{}));break;case"ExistingPage":case"File":case"Discussion":case"Assignment":case"Quiz":this.canvasModules.findItem(index).then((()=>{}));break;case"SubHeader":case"ExternalUrl":case"ExternalTool":this.dispatchEvent("w2c-item-found-created",{item:index});break;default:console.log(`Not yet creating items of type ${item.type}`)}}addItemsToModule(){console.log("c2m_Model -> addItemsToModule");for(let i=0;i<this.canvasModules.items.length;i++)this.addModuleItem(i)}addModuleItem(itemIndex){console.log("Shogin createdModuleItem"),this.canvasModules.addModuleItem(itemIndex).then((()=>{}))}convertWordDoc(event){console.log("c2m_Model -> convertWordDoc");try{this.wordConverter.handleFileSelect(event)}catch(e){console.error(`c2m_Model -> convertWordDoc error: ${e}`)}}h2sAsAccordions(){console.log("c2m_Model -> h2sAsAccordions"),this.wordConverter.h2sAsAccordions()}postProcessMammothResult(){let doc=(new DOMParser).parseFromString(this.wordConverter.mammothResult.value,"text/html");this.removeSpanErrors(doc),this.replaceBase64Images(doc),this.wordConverter.mammothResult.value=doc.documentElement.outerHTML}removeSpanErrors(doc){if(this.keepErrors){const styleString="font-size:50%;margin:1em;background-color:#ff0000;color:white;border-radius:0.5em;padding:0.5em;line-height:inherit;vertical-align:middle;";doc.querySelectorAll("span.w2c-error").forEach((elem=>{elem.style=styleString}))}else{doc.querySelectorAll("span.w2c-error").forEach((elem=>{elem.remove()}))}this.keepErrors=!1,doc.querySelectorAll("span.w2c-warning").forEach((elem=>{elem.remove()})),doc.querySelectorAll("span.w2c-ok").forEach((elem=>{elem.remove()}))}replaceBase64Images(doc){doc.querySelectorAll("img").forEach((elem=>{if(elem.src.startsWith("data:")){const width=320,height=200;elem.src=`https://dummyimage.com/${width}x${height}/000/fff&text=Base64Image`}}))}testHtmlToModule(){Object.prototype.hasOwnProperty.call(this.wordConverter,"mammothResult")&&Object.prototype.hasOwnProperty.call(this.wordConverter.mammothResult,"value")?(this.htmlConverter=new c2m_HtmlConverter(this.wordConverter.mammothResult.value),this.htmlConverter.dump()):console.error("c2m_Model -> testHtmlToModule: no mammoth result")}dispatchEvent(eventName,eventData={}){const event=new CustomEvent(eventName,{detail:eventData});let c2m_dialog=document.querySelector("div.c2m_dialog");c2m_dialog&&c2m_dialog.dispatchEvent(event)}}const c2m_Initialised="c2m_Initialised",c2m_ChooseWord="c2m_ChooseWord",c2m_CheckHtml="c2m_CheckHtml",c2m_CheckModule="c2m_CheckModule",c2m_Completed="c2m_Completed",CI_CSS_URL="https://rawcdn.githack.com/djplaner/word-to-canvas-module/bc41f0c954b717b9693f516f2efcdd1ab3fdce23/css/content-interface.css";class c2m_Controller{constructor(){this.currentState=c2m_Initialised,this.csrfToken=this.getCsrfToken(),this.courseId=this.getCourseId(),this.model=new c2m_Model(this),this.render()}getCsrfToken(){for(var csrf,csrfRegex=new RegExp("^_csrf_token=(.*)$"),cookies=document.cookie.split(";"),i=0;i<cookies.length;i++){var cookie=cookies[i].trim(),match=csrfRegex.exec(cookie);if(match){csrf=decodeURIComponent(match[1]);break}}return csrf}getCourseId(){let courseId=ENV.COURSE_ID||ENV.course_id;if(!courseId){var urlPartIncludingCourseId=window.location.href.split("courses/")[1];urlPartIncludingCourseId&&(courseId=urlPartIncludingCourseId.split("/")[0])}return courseId}render(){console.log("----------------- render -----------------"),console.log(`rendering state ${this.currentState}`),console.log(` -- token ${this.csrfToken}`);let currentPageUrl=window.location.href;if(currentPageUrl.match(/courses\/[0-9]*\/pages/))return;const view=eval(`new ${this.currentState}View(this.model, this)`);view.render()}handleClick(newState){console.log(`handle click switching to ...${newState}`),this.currentState===c2m_Completed&&newState===c2m_Initialised&&window.location.reload(),this.currentState=newState,this.render()}handleUpload(event){console.log("handle upload"),this.model.convertWordDoc(event),this.currentState=c2m_CheckHtml,this.render()}handleH2AsAccordionClick(){this.currentState===c2m_CheckHtml&&this.model.h2sAsAccordions()}handleLeaveErrorsClick(){let keepErrors=document.getElementById("w2c-leave-errors").checked;this.model.keepErrors=keepErrors}}function canvas2Module(){window.addEventListener("load",(function(){new c2m_Controller}))}canvas2Module();